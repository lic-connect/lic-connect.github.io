package com.goji.readyreckoner.plans; import android.content.ActivityNotFoundException; import android.content.ContentValues; import android.content.Intent; import android.content.SharedPreferences; import android.database.sqlite.SQLiteDatabase; import android.net.Uri; import android.os.Build; import android.os.Bundle; import android.os.Environment; import android.text.Editable; import android.text.TextWatcher; import android.view.View; import android.widget.ArrayAdapter; import android.widget.Button; import android.widget.CheckBox; import android.widget.CompoundButton; import android.widget.EditText; import android.widget.LinearLayout; import android.widget.Spinner; import android.widget.TableRow; import android.widget.Toast; import androidx.appcompat.app.AppCompatActivity; import androidx.cardview.widget.CardView; import androidx.core.app.ActivityCompat; import androidx.core.content.ContextCompat; import androidx.core.content.FileProvider; import androidx.recyclerview.widget.ItemTouchHelper; import com.goji.readyreckoner.AndroidOpenDbHelper; import com.goji.readyreckoner.CombinationModelDetails; import com.goji.readyreckoner.DbHandler; import com.goji.readyreckoner.Prefs; import com.goji.readyreckoner.R; import com.goji.readyreckoner.ResultDisplay; import com.goji.readyreckoner.fragment.LastBdDatePickerFragment; import com.google.android.gms.ads.AdRequest; import com.google.android.gms.ads.AdView; import com.google.common.net.HttpHeaders; import com.google.firebase.remoteconfig.FirebaseRemoteConfig; import com.itextpdf.forms.xfdf.XfdfConstants; import com.itextpdf.io.codec.TIFFConstants; import com.itextpdf.io.font.constants.FontStretches; import com.itextpdf.io.font.constants.StandardFonts; import com.itextpdf.kernel.colors.ColorConstants; import com.itextpdf.kernel.colors.DeviceRgb; import com.itextpdf.kernel.events.Event; import com.itextpdf.kernel.events.IEventHandler; import com.itextpdf.kernel.events.PdfDocumentEvent; import com.itextpdf.kernel.font.PdfFont; import com.itextpdf.kernel.font.PdfFontFactory; import com.itextpdf.kernel.geom.PageSize; import com.itextpdf.kernel.geom.Rectangle; import com.itextpdf.kernel.pdf.PdfDocument; import com.itextpdf.kernel.pdf.PdfPage; import com.itextpdf.kernel.pdf.PdfWriter; import com.itextpdf.kernel.pdf.canvas.PdfCanvas; import com.itextpdf.layout.Canvas; import com.itextpdf.layout.Document; import com.itextpdf.layout.Style; import com.itextpdf.layout.borders.Border; import com.itextpdf.layout.element.AreaBreak; import com.itextpdf.layout.element.Cell; import com.itextpdf.layout.element.IBlockElement; import com.itextpdf.layout.element.Paragraph; import com.itextpdf.layout.element.Table; import com.itextpdf.layout.properties.AreaBreakType; import com.itextpdf.layout.properties.HorizontalAlignment; import com.itextpdf.layout.properties.TextAlignment; import com.itextpdf.layout.properties.UnitValue; import com.itextpdf.layout.properties.VerticalAlignment; import es.dmoral.toasty.Toasty; import java.io.File; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.IOException; import java.text.NumberFormat; import java.time.LocalDateTime; import java.time.format.DateTimeFormatter; import java.util.ArrayList; import java.util.Calendar; import java.util.Locale; public class JeevanAnandActivity extends AppCompatActivity { static String My_name; int Bonus15 = 38; int Bonus16_20 = 42; int Bonus21 = 46; int Combo_true; int FAB; int FHPremium; int FHTax_1; int FHTax_2; int FMPremium; int FMTax_1; int FMTax_2; int FQPremium; int FQTax_1; int FQTax_2; int FSingalPremium; int FSingalTax; int FYPremium; int FYTax_1; int FYTax_2; int F_hly_1; int F_hly_2; int F_mly_1; int F_mly_2; int F_qly_1; int F_qly_2; int F_yly_1; int F_yly_2; int LA; String My_designation; String My_email; String My_number; private int STORAGE_PERMISSION_CODE = 23; int SUC; final double TAX_1 = 4.5d; final double TAX_2 = 2.25d; int Toatlpaid; int TotalBonus; int TotalPaid; AdRequest adRequest; AdView adView; double ageextrapremium; EditText anand_age; EditText anand_birthdate; Button anand_calc; Button anand_pdf; EditText anand_sa; EditText anand_term; CheckBox check_ab; CheckBox check_addb; CheckBox check_ageextra; CheckBox check_combo_akshay; CheckBox check_dab; CheckBox check_maturity; CheckBox check_maturity_settlement; CheckBox check_medical; CheckBox check_taxsaved; CheckBox check_termrider; CheckBox check_totalpaid; Integer click_result = 0; /* access modifiers changed from: private */ public ArrayList<CombinationModelDetails> combinationmodelDetailsObjArrayList; String currentTime; double daddb; double ddab; int death_sa; EditText e_name; EditText e_termvalue; SharedPreferences.Editor editor; int final_maturity_amount; int hlysettlement; int i_maturity_settlement_year; int i_money_back_amount; int i_settlement_amount; int iaddb; int iage; int id; int idab; int idsa; Locale indiaLocale; int iplan_no; int ippt; int isa; int iterm = 99; int itr; LinearLayout ll_medical_layout; private Spinner modespinner; int optionSelected; String pdfPath; int pdf_bonus; Boolean pdf_click = false; Button pdf_create; String pdfname; int pension_age; CardView plan_info; Prefs prefs; double premiumecs; double premiumhly; double premiumqly; double premiumyly; boolean purchased; double rebatetbp; String result; String s_money_back_year; String s_return_string; String s_wholelife; String sage; SharedPreferences sharedPreferences; String sname; Spinner spiner_education; Spinner spiner_income_category; Spinner spiner_select_category; String sppt; String sproposerage; String spwb; String ssa; String sterm; String stermridersa = "0"; TableRow tablerow_settlement_mode; TableRow tablerow_settlement_year; TableRow tablerow_taxsaved; TableRow tablerow_termsa; double taxon1ypremecs; double taxon1ypremhly; double taxon1ypremqly; double taxon1ypremyly; double taxon2ypremecs; double taxon2ypremhly; double taxon2ypremqly; double taxon2ypremyly; private Spinner taxratespinner; int taxsaved; double termriderpremium; int termridersa; int total_death_sa; int total_return; int yearlypremium; private Spinner yearspinner; int ylysettlement; /* access modifiers changed from: protected */ public void onCreate(Bundle bundle) { super.onCreate(bundle); setContentView((int) R.layout.activity_jeevan_anand); setTitle(R.string.jeevan_anand); this.indiaLocale = new Locale("en", "IN"); if (!isWriteStorageAllowed()) { requestWriteStoragePermission(); } if (Build.VERSION.SDK_INT >= 26) { this.currentTime = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss")); } else { this.currentTime = String.valueOf(Calendar.getInstance().getTime()); } this.prefs = new Prefs(getApplicationContext()); this.adView = (AdView) findViewById(R.id.adView); if (this.prefs.getPremium() == 1) { this.adView.setVisibility(8); } else { this.adView.setVisibility(0); AdRequest build = new AdRequest.Builder().build(); this.adRequest = build; this.adView.loadAd(build); } SharedPreferences sharedPreferences2 = getApplicationContext().getSharedPreferences(getString(R.string.preference_file_key), 0); this.My_designation = sharedPreferences2.getString("Job", "Financial Planer"); My_name = sharedPreferences2.getString(XfdfConstants.NAME_CAPITAL, "Ready Reckoner"); this.My_number = sharedPreferences2.getString("Mobile", "0000000000"); this.My_email = sharedPreferences2.getString("Email", "abcd@xyz.com"); Button button = (Button) findViewById(R.id.anand_cal_pdf); this.pdf_create = button; button.setVisibility(8); this.Combo_true = getIntent().getIntExtra("EXTRA_COMBO", 0); this.combinationmodelDetailsObjArrayList = new ArrayList<>(); this.taxratespinner = (Spinner) findViewById(R.id.taxrate_spinner); this.modespinner = (Spinner) findViewById(R.id.mode_spinner); this.yearspinner = (Spinner) findViewById(R.id.year_spinner); this.check_termrider = (CheckBox) findViewById(R.id.termrider); this.check_dab = (CheckBox) findViewById(R.id.dab); this.check_ageextra = (CheckBox) findViewById(R.id.ageextra); this.check_medical = (CheckBox) findViewById(R.id.medical); this.check_totalpaid = (CheckBox) findViewById(R.id.totalpaid); this.check_maturity = (CheckBox) findViewById(R.id.maturity); this.tablerow_termsa = (TableRow) findViewById(R.id.tableRow_termsa); this.tablerow_settlement_mode = (TableRow) findViewById(R.id.tableRow_Settlement_mode); this.tablerow_settlement_year = (TableRow) findViewById(R.id.tableRow_maturitySettlement); this.tablerow_taxsaved = (TableRow) findViewById(R.id.tableRow_taxsaved); this.modespinner = (Spinner) findViewById(R.id.mode_spinner); this.yearspinner = (Spinner) findViewById(R.id.year_spinner); this.taxratespinner = (Spinner) findViewById(R.id.taxrate_spinner); this.check_taxsaved = (CheckBox) findViewById(R.id.taxsaved); this.check_maturity_settlement = (CheckBox) findViewById(R.id.maturitysettlement); this.check_combo_akshay = (CheckBox) findViewById(R.id.combo_akshay); this.e_name = (EditText) findViewById(R.id.ename); this.anand_birthdate = (EditText) findViewById(R.id.et_last_birthdate); this.e_termvalue = (EditText) findViewById(R.id.e_termsa); this.tablerow_termsa.setVisibility(8); this.tablerow_taxsaved.setVisibility(8); this.tablerow_settlement_mode.setVisibility(8); this.tablerow_settlement_year.setVisibility(8); this.check_combo_akshay.setVisibility(8); this.modespinner.setVisibility(8); this.anand_age = (EditText) findViewById(R.id.et_age); this.anand_term = (EditText) findViewById(R.id.anand_et_term); this.anand_sa = (EditText) findViewById(R.id.anand_et_sa); this.anand_calc = (Button) findViewById(R.id.anand_calculate); this.ll_medical_layout = (LinearLayout) findViewById(R.id.ll_medical); this.spiner_select_category = (Spinner) findViewById(R.id.sp_category); this.spiner_income_category = (Spinner) findViewById(R.id.sp_income_c); this.spiner_education = (Spinner) findViewById(R.id.sp_education_c); this.ll_medical_layout.setVisibility(8); this.anand_sa.addTextChangedListener(new TextWatcher() { public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) { } public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) { } public void afterTextChanged(Editable editable) { String replaceAll = editable.toString().replaceAll(",", ""); int i = 0; try { if (!replaceAll.isEmpty()) { i = Integer.parseInt(replaceAll); } } catch (NumberFormatException unused) { } String format = NumberFormat.getNumberInstance(new Locale("en", "IN")).format((long) i); JeevanAnandActivity.this.anand_sa.removeTextChangedListener(this); JeevanAnandActivity.this.anand_sa.setText(format); JeevanAnandActivity.this.anand_sa.setSelection(format.length()); JeevanAnandActivity.this.anand_sa.addTextChangedListener(this); } }); CardView cardView = (CardView) findViewById(R.id.card_plan_info); this.plan_info = cardView; cardView.setOnClickListener(new View.OnClickListener() { public void onClick(View view) { Intent intent = new Intent(); intent.setClass(JeevanAnandActivity.this.getApplicationContext(), JeevanAnandPlanInfo.class); JeevanAnandActivity.this.startActivity(intent); } }); this.anand_birthdate.setOnClickListener(new View.OnClickListener() { public void onClick(View view) { new LastBdDatePickerFragment().show(JeevanAnandActivity.this.getSupportFragmentManager(), "datePicker"); } }); checkspinnerdefine(); termriderfunction(); if (this.Combo_true == 1) { this.pdf_create.setVisibility(8); } else { this.pdf_create.setVisibility(0); } this.pdf_create.setOnClickListener(new View.OnClickListener() { public void onClick(View view) { try { JeevanAnandActivity.this.pdf_click = true; JeevanAnandActivity.this.anand_calc.performClick(); JeevanAnandActivity.this.pdf_click = false; if (JeevanAnandActivity.this.click_result.intValue() == 1) { JeevanAnandActivity.this.createPdf(); Toasty.success(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Please Wait. Pdf Created.", 0).show(); } } catch (FileNotFoundException e) { e.printStackTrace(); } if (JeevanAnandActivity.this.click_result.intValue() == 1) { File file = new File(JeevanAnandActivity.this.pdfPath, JeevanAnandActivity.this.pdfname); if (file.exists()) { Uri uriForFile = FileProvider.getUriForFile(JeevanAnandActivity.this.getApplicationContext(), JeevanAnandActivity.this.getString(R.string.file_provider_authority), file); Intent intent = new Intent("android.intent.action.VIEW"); intent.setDataAndType(uriForFile, "application/pdf"); intent.addFlags(1); try { JeevanAnandActivity.this.startActivity(intent); } catch (ActivityNotFoundException unused) { Toast.makeText(JeevanAnandActivity.this.getApplicationContext(), "No Application Available to View PDF", 0).show(); } } } } }); this.anand_calc.setOnClickListener(new View.OnClickListener() { public void onClick(View view) { int i; int i2; JeevanAnandActivity.this.click_result = 0; JeevanAnandActivity.this.iplan_no = 815; JeevanAnandActivity jeevanAnandActivity = JeevanAnandActivity.this; jeevanAnandActivity.sage = jeevanAnandActivity.anand_age.getText().toString(); JeevanAnandActivity jeevanAnandActivity2 = JeevanAnandActivity.this; jeevanAnandActivity2.sterm = jeevanAnandActivity2.anand_term.getText().toString(); JeevanAnandActivity jeevanAnandActivity3 = JeevanAnandActivity.this; jeevanAnandActivity3.sname = jeevanAnandActivity3.e_name.getText().toString(); if (JeevanAnandActivity.this.check_termrider.isChecked()) { JeevanAnandActivity jeevanAnandActivity4 = JeevanAnandActivity.this; jeevanAnandActivity4.stermridersa = jeevanAnandActivity4.e_termvalue.getText().toString(); } JeevanAnandActivity jeevanAnandActivity5 = JeevanAnandActivity.this; jeevanAnandActivity5.ssa = jeevanAnandActivity5.anand_sa.getText().toString().replaceAll(",", ""); JeevanAnandActivity.this.result = ""; if (JeevanAnandActivity.this.sage != null && JeevanAnandActivity.this.sage.trim().length() == 0) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Please Enter AGE ", 1).show(); } else if (Integer.parseInt(JeevanAnandActivity.this.sage) < 18) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Minimum AGE is 18 ", 1).show(); JeevanAnandActivity.this.anand_age.setText(""); } else if (Integer.parseInt(JeevanAnandActivity.this.sage) > 50) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Maximum AGE is 50 ", 1).show(); JeevanAnandActivity.this.anand_age.setText(""); } else if (JeevanAnandActivity.this.sterm != null && JeevanAnandActivity.this.sterm.trim().length() == 0) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Please Enter Term ", 1).show(); } else if (Integer.parseInt(JeevanAnandActivity.this.sterm) < 15) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Minimum Term is 15 ", 1).show(); JeevanAnandActivity.this.anand_term.setText(""); } else if (Integer.parseInt(JeevanAnandActivity.this.sterm) > 35) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Maximum Term is 35 ", 1).show(); JeevanAnandActivity.this.anand_term.setText(""); } else if (Integer.parseInt(JeevanAnandActivity.this.sage) + Integer.parseInt(JeevanAnandActivity.this.sterm) > 75) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Maximum Maturity age 75 ", 1).show(); JeevanAnandActivity.this.anand_term.setText(""); } else if (JeevanAnandActivity.this.ssa != null && JeevanAnandActivity.this.ssa.trim().length() == 0) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Please Enter S.A. ", 1).show(); } else if (Integer.parseInt(JeevanAnandActivity.this.ssa) < 200000) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Minimum S.A. is 2,00,000 ", 1).show(); JeevanAnandActivity.this.anand_sa.setText(""); } else if (Integer.parseInt(JeevanAnandActivity.this.ssa) < 450000 && Integer.parseInt(JeevanAnandActivity.this.ssa) % 5000 != 0) { Toast.makeText(JeevanAnandActivity.this.getApplicationContext(), "SA in multiple of 5000 ", 1).show(); } else if (Integer.parseInt(JeevanAnandActivity.this.ssa) > 450000 && Integer.parseInt(JeevanAnandActivity.this.ssa) <= 900000 && Integer.parseInt(JeevanAnandActivity.this.ssa) % 50000 != 0) { Toast.makeText(JeevanAnandActivity.this.getApplicationContext(), "SA in multiple of 50000 ", 1).show(); } else if (Integer.parseInt(JeevanAnandActivity.this.ssa) > 900000 && Integer.parseInt(JeevanAnandActivity.this.ssa) % 100000 != 0) { Toast.makeText(JeevanAnandActivity.this.getApplicationContext(), "SA in multiple of 100000 ", 1).show(); } else if (JeevanAnandActivity.this.check_termrider.isChecked() && JeevanAnandActivity.this.stermridersa != null && JeevanAnandActivity.this.stermridersa.trim().length() == 0) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Please Enter Term Rider S.A. ", 1).show(); } else if (JeevanAnandActivity.this.check_termrider.isChecked() && Integer.parseInt(JeevanAnandActivity.this.stermridersa) < 100000) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Minimum Term Rider S.A. is 100000", 1).show(); } else if (JeevanAnandActivity.this.check_termrider.isChecked() && Integer.parseInt(JeevanAnandActivity.this.stermridersa) > 2500000) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Maximum Term Rider S.A. is 2500000", 1).show(); } else if (JeevanAnandActivity.this.check_termrider.isChecked() && Integer.parseInt(JeevanAnandActivity.this.stermridersa) % 5000 != 0) { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Term Rider S.A in multiple of 5000 ", 1).show(); } else if (!JeevanAnandActivity.this.check_termrider.isChecked() || Integer.parseInt(JeevanAnandActivity.this.stermridersa) <= Integer.parseInt(JeevanAnandActivity.this.ssa)) { JeevanAnandActivity.this.click_result = 1; JeevanAnandActivity jeevanAnandActivity6 = JeevanAnandActivity.this; jeevanAnandActivity6.iage = Integer.parseInt(jeevanAnandActivity6.sage); JeevanAnandActivity jeevanAnandActivity7 = JeevanAnandActivity.this; jeevanAnandActivity7.iterm = Integer.parseInt(jeevanAnandActivity7.sterm); DbHandler dbHandler = new DbHandler(JeevanAnandActivity.this.getApplicationContext()); double igetTBP715 = dbHandler.igetTBP715(JeevanAnandActivity.this.iage, JeevanAnandActivity.this.iterm, "table_715"); JeevanAnandActivity jeevanAnandActivity8 = JeevanAnandActivity.this; jeevanAnandActivity8.termridersa = Integer.parseInt(jeevanAnandActivity8.stermridersa); JeevanAnandActivity jeevanAnandActivity9 = JeevanAnandActivity.this; jeevanAnandActivity9.isa = Integer.parseInt(jeevanAnandActivity9.ssa); JeevanAnandActivity jeevanAnandActivity10 = JeevanAnandActivity.this; jeevanAnandActivity10.SUC = (int) (((double) jeevanAnandActivity10.isa) * 1.25d); JeevanAnandActivity jeevanAnandActivity11 = JeevanAnandActivity.this; jeevanAnandActivity11.death_sa = jeevanAnandActivity11.SUC; JeevanAnandActivity jeevanAnandActivity12 = JeevanAnandActivity.this; jeevanAnandActivity12.idsa = jeevanAnandActivity12.SUC; if (JeevanAnandActivity.this.isa < 450000) { JeevanAnandActivity.this.rebatetbp = igetTBP715 - FirebaseRemoteConfig.DEFAULT_VALUE_FOR_DOUBLE; } else if (JeevanAnandActivity.this.isa < 500000 || JeevanAnandActivity.this.isa >= 900000) { JeevanAnandActivity.this.rebatetbp = igetTBP715 - 4.0d; } else { JeevanAnandActivity.this.rebatetbp = igetTBP715 - 2.5d; } if (JeevanAnandActivity.this.iage < 18) { JeevanAnandActivity.this.ddab = FirebaseRemoteConfig.DEFAULT_VALUE_FOR_DOUBLE; } else { if (JeevanAnandActivity.this.isa > 10000000) { i2 = 10000; } else { i2 = JeevanAnandActivity.this.isa / 1000; } JeevanAnandActivity.this.ddab = ((double) i2) * 1.0d; } JeevanAnandActivity.this.isa /= 1000; double d = ((double) JeevanAnandActivity.this.isa) * igetTBP715 * 0.02d; double d2 = igetTBP715 * ((double) JeevanAnandActivity.this.isa) * 0.01d; if (JeevanAnandActivity.this.check_dab.isChecked()) { JeevanAnandActivity jeevanAnandActivity13 = JeevanAnandActivity.this; jeevanAnandActivity13.premiumyly = ((jeevanAnandActivity13.rebatetbp * ((double) JeevanAnandActivity.this.isa)) - d) + JeevanAnandActivity.this.ddab; JeevanAnandActivity jeevanAnandActivity14 = JeevanAnandActivity.this; jeevanAnandActivity14.premiumhly = ((jeevanAnandActivity14.rebatetbp * ((double) JeevanAnandActivity.this.isa)) - d2) + JeevanAnandActivity.this.ddab; JeevanAnandActivity jeevanAnandActivity15 = JeevanAnandActivity.this; jeevanAnandActivity15.premiumqly = (jeevanAnandActivity15.rebatetbp * ((double) JeevanAnandActivity.this.isa)) + JeevanAnandActivity.this.ddab; JeevanAnandActivity jeevanAnandActivity16 = JeevanAnandActivity.this; jeevanAnandActivity16.premiumecs = (jeevanAnandActivity16.rebatetbp * ((double) JeevanAnandActivity.this.isa)) + JeevanAnandActivity.this.ddab; } else { JeevanAnandActivity jeevanAnandActivity17 = JeevanAnandActivity.this; jeevanAnandActivity17.premiumyly = (jeevanAnandActivity17.rebatetbp * ((double) JeevanAnandActivity.this.isa)) - d; JeevanAnandActivity jeevanAnandActivity18 = JeevanAnandActivity.this; jeevanAnandActivity18.premiumhly = (jeevanAnandActivity18.rebatetbp * ((double) JeevanAnandActivity.this.isa)) - d2; JeevanAnandActivity jeevanAnandActivity19 = JeevanAnandActivity.this; jeevanAnandActivity19.premiumqly = jeevanAnandActivity19.rebatetbp * ((double) JeevanAnandActivity.this.isa); JeevanAnandActivity jeevanAnandActivity20 = JeevanAnandActivity.this; jeevanAnandActivity20.premiumecs = jeevanAnandActivity20.rebatetbp * ((double) JeevanAnandActivity.this.isa); } if (JeevanAnandActivity.this.check_ageextra.isChecked()) { JeevanAnandActivity.this.iplan_no = 5815; double igetTBP = dbHandler.igetTBP(JeevanAnandActivity.this.iage, JeevanAnandActivity.this.iterm, JeevanAnandActivity.this.iplan_no); if (igetTBP < 1.5d) { igetTBP = 1.5d; } if (JeevanAnandActivity.this.iage >= 18) { JeevanAnandActivity jeevanAnandActivity21 = JeevanAnandActivity.this; jeevanAnandActivity21.ageextrapremium = igetTBP * ((double) jeevanAnandActivity21.isa); JeevanAnandActivity.this.premiumyly += JeevanAnandActivity.this.ageextrapremium; JeevanAnandActivity.this.premiumhly += JeevanAnandActivity.this.ageextrapremium; JeevanAnandActivity.this.premiumqly += JeevanAnandActivity.this.ageextrapremium; JeevanAnandActivity.this.premiumecs += JeevanAnandActivity.this.ageextrapremium; } JeevanAnandActivity.this.iplan_no = 815; } if (JeevanAnandActivity.this.check_termrider.isChecked()) { JeevanAnandActivity.this.iplan_no = 1815; double igetTBPTR714 = dbHandler.igetTBPTR714(JeevanAnandActivity.this.iage, JeevanAnandActivity.this.iterm, "TermRider_714"); if (JeevanAnandActivity.this.iage >= 18) { JeevanAnandActivity.this.SUC += JeevanAnandActivity.this.termridersa; JeevanAnandActivity.this.termridersa /= 1000; JeevanAnandActivity jeevanAnandActivity22 = JeevanAnandActivity.this; jeevanAnandActivity22.termriderpremium = igetTBPTR714 * ((double) jeevanAnandActivity22.termridersa); JeevanAnandActivity jeevanAnandActivity23 = JeevanAnandActivity.this; jeevanAnandActivity23.premiumyly = (jeevanAnandActivity23.premiumyly + JeevanAnandActivity.this.termriderpremium) - ((((double) JeevanAnandActivity.this.termridersa) * igetTBPTR714) * 0.02d); JeevanAnandActivity jeevanAnandActivity24 = JeevanAnandActivity.this; jeevanAnandActivity24.premiumhly = (jeevanAnandActivity24.premiumhly + JeevanAnandActivity.this.termriderpremium) - ((((double) JeevanAnandActivity.this.termridersa) * igetTBPTR714) * 0.01d); JeevanAnandActivity.this.premiumqly += JeevanAnandActivity.this.termriderpremium; JeevanAnandActivity.this.premiumecs += JeevanAnandActivity.this.termriderpremium; } JeevanAnandActivity.this.iplan_no = 815; } JeevanAnandActivity jeevanAnandActivity25 = JeevanAnandActivity.this; jeevanAnandActivity25.premiumyly = (double) ((int) Math.round(jeevanAnandActivity25.premiumyly)); JeevanAnandActivity jeevanAnandActivity26 = JeevanAnandActivity.this; jeevanAnandActivity26.premiumhly = (double) ((int) Math.round(jeevanAnandActivity26.premiumhly)); JeevanAnandActivity jeevanAnandActivity27 = JeevanAnandActivity.this; jeevanAnandActivity27.premiumqly = (double) ((int) Math.round(jeevanAnandActivity27.premiumqly)); JeevanAnandActivity jeevanAnandActivity28 = JeevanAnandActivity.this; jeevanAnandActivity28.premiumecs = (double) ((int) Math.round(jeevanAnandActivity28.premiumecs)); JeevanAnandActivity jeevanAnandActivity29 = JeevanAnandActivity.this; jeevanAnandActivity29.taxon1ypremyly = jeevanAnandActivity29.premiumyly * 0.045d; JeevanAnandActivity jeevanAnandActivity30 = JeevanAnandActivity.this; jeevanAnandActivity30.taxon2ypremyly = jeevanAnandActivity30.premiumyly * 0.0225d; JeevanAnandActivity jeevanAnandActivity31 = JeevanAnandActivity.this; jeevanAnandActivity31.taxon1ypremhly = jeevanAnandActivity31.premiumhly * 0.045d; JeevanAnandActivity jeevanAnandActivity32 = JeevanAnandActivity.this; jeevanAnandActivity32.taxon2ypremhly = jeevanAnandActivity32.premiumhly * 0.0225d; JeevanAnandActivity jeevanAnandActivity33 = JeevanAnandActivity.this; jeevanAnandActivity33.taxon1ypremqly = jeevanAnandActivity33.premiumqly * 0.045d; JeevanAnandActivity jeevanAnandActivity34 = JeevanAnandActivity.this; jeevanAnandActivity34.taxon2ypremqly = jeevanAnandActivity34.premiumqly * 0.0225d; JeevanAnandActivity jeevanAnandActivity35 = JeevanAnandActivity.this; jeevanAnandActivity35.taxon1ypremecs = jeevanAnandActivity35.premiumecs * 0.045d; JeevanAnandActivity jeevanAnandActivity36 = JeevanAnandActivity.this; jeevanAnandActivity36.taxon2ypremecs = jeevanAnandActivity36.premiumecs * 0.0225d; JeevanAnandActivity.this.premiumTaxcalcFunction(); int i3 = JeevanAnandActivity.this.FYPremium + JeevanAnandActivity.this.FYTax_1; int i4 = JeevanAnandActivity.this.FYPremium + JeevanAnandActivity.this.FYTax_2; int i5 = JeevanAnandActivity.this.FHPremium + JeevanAnandActivity.this.FHTax_1; int i6 = JeevanAnandActivity.this.FHPremium + JeevanAnandActivity.this.FHTax_2; int i7 = JeevanAnandActivity.this.FQPremium + JeevanAnandActivity.this.FQTax_1; int i8 = JeevanAnandActivity.this.FQPremium + JeevanAnandActivity.this.FQTax_2; int i9 = JeevanAnandActivity.this.FMPremium + JeevanAnandActivity.this.FMTax_1; int i10 = JeevanAnandActivity.this.FMPremium + JeevanAnandActivity.this.FMTax_2; if (JeevanAnandActivity.this.check_taxsaved.isChecked()) { JeevanAnandActivity.this.yearlypremium = i3; JeevanAnandActivity.this.taxsavedfunction(); } JeevanAnandActivity jeevanAnandActivity37 = JeevanAnandActivity.this; jeevanAnandActivity37.Toatlpaid = ((jeevanAnandActivity37.iterm - 1) * i4) + i3; if (JeevanAnandActivity.this.iterm == 15) { JeevanAnandActivity jeevanAnandActivity38 = JeevanAnandActivity.this; jeevanAnandActivity38.TotalBonus = jeevanAnandActivity38.isa * JeevanAnandActivity.this.Bonus15 * JeevanAnandActivity.this.iterm; JeevanAnandActivity jeevanAnandActivity39 = JeevanAnandActivity.this; jeevanAnandActivity39.pdf_bonus = jeevanAnandActivity39.isa * JeevanAnandActivity.this.Bonus15; } else if (JeevanAnandActivity.this.iterm <= 15 || JeevanAnandActivity.this.iterm > 20) { JeevanAnandActivity jeevanAnandActivity40 = JeevanAnandActivity.this; jeevanAnandActivity40.TotalBonus = jeevanAnandActivity40.isa * JeevanAnandActivity.this.Bonus21 * JeevanAnandActivity.this.iterm; JeevanAnandActivity jeevanAnandActivity41 = JeevanAnandActivity.this; jeevanAnandActivity41.pdf_bonus = jeevanAnandActivity41.isa * JeevanAnandActivity.this.Bonus21; } else { JeevanAnandActivity jeevanAnandActivity42 = JeevanAnandActivity.this; jeevanAnandActivity42.TotalBonus = jeevanAnandActivity42.isa * JeevanAnandActivity.this.Bonus16_20 * JeevanAnandActivity.this.iterm; JeevanAnandActivity jeevanAnandActivity43 = JeevanAnandActivity.this; jeevanAnandActivity43.pdf_bonus = jeevanAnandActivity43.isa * JeevanAnandActivity.this.Bonus16_20; } JeevanAnandActivity jeevanAnandActivity44 = JeevanAnandActivity.this; jeevanAnandActivity44.fabCalculationFunction(jeevanAnandActivity44.iterm); JeevanAnandActivity.this.result = ""; if (JeevanAnandActivity.this.sname == null || JeevanAnandActivity.this.sname.trim().length() != 0) { StringBuilder sb = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity45 = JeevanAnandActivity.this; sb.append(jeevanAnandActivity45.result); sb.append("To,\nMr/Mrs/Ms : "); sb.append(JeevanAnandActivity.this.sname); sb.append("\n\n"); jeevanAnandActivity45.result = sb.toString(); } StringBuilder sb2 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity46 = JeevanAnandActivity.this; sb2.append(jeevanAnandActivity46.result); sb2.append("Plan : Jeevan Anand - 715\n\n"); jeevanAnandActivity46.result = sb2.toString(); StringBuilder sb3 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity47 = JeevanAnandActivity.this; sb3.append(jeevanAnandActivity47.result); sb3.append("Age :"); sb3.append(JeevanAnandActivity.this.iage); sb3.append("\n"); jeevanAnandActivity47.result = sb3.toString(); StringBuilder sb4 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity48 = JeevanAnandActivity.this; sb4.append(jeevanAnandActivity48.result); sb4.append("Term :"); sb4.append(JeevanAnandActivity.this.iterm); sb4.append("\n"); jeevanAnandActivity48.result = sb4.toString(); if (JeevanAnandActivity.this.check_dab.isChecked()) { if (Integer.parseInt(JeevanAnandActivity.this.ssa) > 10000000) { StringBuilder sb5 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity49 = JeevanAnandActivity.this; sb5.append(jeevanAnandActivity49.result); sb5.append("D.A.B. : 10000000 \n"); jeevanAnandActivity49.result = sb5.toString(); JeevanAnandActivity.this.idab = 10000000; } else { StringBuilder sb6 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity50 = JeevanAnandActivity.this; sb6.append(jeevanAnandActivity50.result); sb6.append("D.A.B. : "); sb6.append(Integer.parseInt(JeevanAnandActivity.this.ssa)); sb6.append("\n"); jeevanAnandActivity50.result = sb6.toString(); JeevanAnandActivity jeevanAnandActivity51 = JeevanAnandActivity.this; jeevanAnandActivity51.idab = Integer.parseInt(jeevanAnandActivity51.ssa); } i = 0; } else { i = 0; JeevanAnandActivity.this.idab = 0; } JeevanAnandActivity.this.iaddb = i; if (!JeevanAnandActivity.this.check_termrider.isChecked()) { JeevanAnandActivity.this.itr = 0; } else if (JeevanAnandActivity.this.iage < 18) { JeevanAnandActivity.this.itr = i; } else { StringBuilder sb7 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity52 = JeevanAnandActivity.this; sb7.append(jeevanAnandActivity52.result); sb7.append("Term Rider S.A.:"); sb7.append(Integer.parseInt(JeevanAnandActivity.this.stermridersa)); sb7.append("\n"); jeevanAnandActivity52.result = sb7.toString(); JeevanAnandActivity jeevanAnandActivity53 = JeevanAnandActivity.this; jeevanAnandActivity53.itr = Integer.parseInt(jeevanAnandActivity53.stermridersa); } JeevanAnandActivity.this.spwb = "NA"; StringBuilder sb8 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity54 = JeevanAnandActivity.this; sb8.append(jeevanAnandActivity54.result); sb8.append("Death Sum Assured :"); sb8.append(JeevanAnandActivity.this.death_sa); sb8.append("\n"); jeevanAnandActivity54.result = sb8.toString(); StringBuilder sb9 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity55 = JeevanAnandActivity.this; sb9.append(jeevanAnandActivity55.result); sb9.append("Basic Sum Assured :"); sb9.append(Integer.parseInt(JeevanAnandActivity.this.ssa)); sb9.append("\n\n"); jeevanAnandActivity55.result = sb9.toString(); JeevanAnandActivity.this.F_yly_1 = i3; JeevanAnandActivity.this.F_hly_1 = i5; JeevanAnandActivity.this.F_qly_1 = i7; JeevanAnandActivity.this.F_mly_1 = i9; JeevanAnandActivity.this.F_yly_2 = i4; JeevanAnandActivity.this.F_hly_2 = i6; JeevanAnandActivity.this.F_qly_2 = i8; JeevanAnandActivity.this.F_mly_2 = i10; StringBuilder sb10 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity56 = JeevanAnandActivity.this; sb10.append(jeevanAnandActivity56.result); sb10.append("1st year Premium With TAX 4.5% :\n"); jeevanAnandActivity56.result = sb10.toString(); StringBuilder sb11 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity57 = JeevanAnandActivity.this; sb11.append(jeevanAnandActivity57.result); sb11.append("Yearly : "); sb11.append(i3); sb11.append(" ("); sb11.append(JeevanAnandActivity.this.FYPremium); sb11.append(" + "); sb11.append(JeevanAnandActivity.this.FYTax_1); sb11.append(")\n"); jeevanAnandActivity57.result = sb11.toString(); StringBuilder sb12 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity58 = JeevanAnandActivity.this; String str = "\n"; sb12.append(jeevanAnandActivity58.result); sb12.append("Halfly : "); sb12.append(i5); sb12.append(" ("); sb12.append(JeevanAnandActivity.this.FHPremium); sb12.append(" + "); sb12.append(JeevanAnandActivity.this.FHTax_1); sb12.append(")\n"); jeevanAnandActivity58.result = sb12.toString(); StringBuilder sb13 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity59 = JeevanAnandActivity.this; sb13.append(jeevanAnandActivity59.result); sb13.append("Quarterly : "); sb13.append(i7); sb13.append(" ("); sb13.append(JeevanAnandActivity.this.FQPremium); sb13.append(" + "); sb13.append(JeevanAnandActivity.this.FQTax_1); sb13.append(")\n"); jeevanAnandActivity59.result = sb13.toString(); StringBuilder sb14 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity60 = JeevanAnandActivity.this; sb14.append(jeevanAnandActivity60.result); sb14.append("Monthly(ECS) : "); sb14.append(i9); sb14.append(" ("); sb14.append(JeevanAnandActivity.this.FMPremium); sb14.append(" + "); sb14.append(JeevanAnandActivity.this.FMTax_1); sb14.append(")\n"); jeevanAnandActivity60.result = sb14.toString(); int round = Math.round((float) (i3 / 365)); StringBuilder sb15 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity61 = JeevanAnandActivity.this; sb15.append(jeevanAnandActivity61.result); sb15.append("YLY Mode Average Prem/Day : "); sb15.append(round); sb15.append("\n\n"); jeevanAnandActivity61.result = sb15.toString(); StringBuilder sb16 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity62 = JeevanAnandActivity.this; sb16.append(jeevanAnandActivity62.result); sb16.append("After 1st year Premium With TAX 2.25% :\n"); jeevanAnandActivity62.result = sb16.toString(); StringBuilder sb17 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity63 = JeevanAnandActivity.this; sb17.append(jeevanAnandActivity63.result); sb17.append("Yearly : "); sb17.append(i4); sb17.append(" ("); sb17.append(JeevanAnandActivity.this.FYPremium); sb17.append(" + "); sb17.append(JeevanAnandActivity.this.FYTax_2); sb17.append(")\n"); jeevanAnandActivity63.result = sb17.toString(); StringBuilder sb18 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity64 = JeevanAnandActivity.this; sb18.append(jeevanAnandActivity64.result); sb18.append("Halfly : "); sb18.append(i6); sb18.append(" ("); sb18.append(JeevanAnandActivity.this.FHPremium); sb18.append(" + "); sb18.append(JeevanAnandActivity.this.FHTax_2); sb18.append(")\n"); jeevanAnandActivity64.result = sb18.toString(); StringBuilder sb19 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity65 = JeevanAnandActivity.this; sb19.append(jeevanAnandActivity65.result); sb19.append("Quarterly : "); sb19.append(i8); sb19.append(" ("); sb19.append(JeevanAnandActivity.this.FQPremium); sb19.append(" + "); sb19.append(JeevanAnandActivity.this.FQTax_2); sb19.append(")\n"); jeevanAnandActivity65.result = sb19.toString(); StringBuilder sb20 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity66 = JeevanAnandActivity.this; sb20.append(jeevanAnandActivity66.result); sb20.append("Monthly(ECS) : "); sb20.append(i10); sb20.append(" ("); sb20.append(JeevanAnandActivity.this.FMPremium); sb20.append(" + "); sb20.append(JeevanAnandActivity.this.FMTax_2); sb20.append(")\n"); jeevanAnandActivity66.result = sb20.toString(); int round2 = Math.round((float) (i4 / 365)); StringBuilder sb21 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity67 = JeevanAnandActivity.this; sb21.append(jeevanAnandActivity67.result); sb21.append("YLY Mode Average Prem/Day : "); sb21.append(round2); sb21.append("\n\n"); jeevanAnandActivity67.result = sb21.toString(); if (JeevanAnandActivity.this.check_taxsaved.isChecked()) { StringBuilder sb22 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity68 = JeevanAnandActivity.this; sb22.append(jeevanAnandActivity68.result); sb22.append("Approximate Tax Saved Every Year : "); sb22.append(JeevanAnandActivity.this.taxsaved); sb22.append("\n\n"); jeevanAnandActivity68.result = sb22.toString(); } if (JeevanAnandActivity.this.check_totalpaid.isChecked()) { StringBuilder sb23 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity69 = JeevanAnandActivity.this; sb23.append(jeevanAnandActivity69.result); sb23.append("Total Approximate Paid Premium : "); sb23.append(JeevanAnandActivity.this.Toatlpaid); sb23.append("\n\n"); jeevanAnandActivity69.result = sb23.toString(); } if (JeevanAnandActivity.this.check_maturity.isChecked()) { StringBuilder sb24 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity70 = JeevanAnandActivity.this; sb24.append(jeevanAnandActivity70.result); sb24.append("Approximate Return at Maturity Time : \n\n"); jeevanAnandActivity70.result = sb24.toString(); StringBuilder sb25 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity71 = JeevanAnandActivity.this; sb25.append(jeevanAnandActivity71.result); sb25.append("S.A. : "); sb25.append(Integer.parseInt(JeevanAnandActivity.this.ssa)); String str2 = str; sb25.append(str2); jeevanAnandActivity71.result = sb25.toString(); StringBuilder sb26 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity72 = JeevanAnandActivity.this; sb26.append(jeevanAnandActivity72.result); sb26.append("Bonus : "); sb26.append(JeevanAnandActivity.this.TotalBonus); sb26.append(str2); jeevanAnandActivity72.result = sb26.toString(); StringBuilder sb27 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity73 = JeevanAnandActivity.this; sb27.append(jeevanAnandActivity73.result); sb27.append("F.A.B. : "); sb27.append(JeevanAnandActivity.this.FAB); sb27.append(str2); jeevanAnandActivity73.result = sb27.toString(); int parseInt = Integer.parseInt(JeevanAnandActivity.this.ssa) + JeevanAnandActivity.this.TotalBonus + JeevanAnandActivity.this.FAB; StringBuilder sb28 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity74 = JeevanAnandActivity.this; sb28.append(jeevanAnandActivity74.result); sb28.append("Total Approximate Return at Maturity Time : "); sb28.append(parseInt); sb28.append(str2); jeevanAnandActivity74.result = sb28.toString(); StringBuilder sb29 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity75 = JeevanAnandActivity.this; sb29.append(jeevanAnandActivity75.result); sb29.append(" + \n"); jeevanAnandActivity75.result = sb29.toString(); StringBuilder sb30 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity76 = JeevanAnandActivity.this; sb30.append(jeevanAnandActivity76.result); sb30.append("Life time Rs."); sb30.append(Integer.parseInt(JeevanAnandActivity.this.ssa)); sb30.append(" risk cover. \n"); jeevanAnandActivity76.result = sb30.toString(); } JeevanAnandActivity jeevanAnandActivity77 = JeevanAnandActivity.this; jeevanAnandActivity77.total_return = Integer.parseInt(jeevanAnandActivity77.ssa) + JeevanAnandActivity.this.TotalBonus + JeevanAnandActivity.this.FAB; JeevanAnandActivity.this.s_money_back_year = "NA"; JeevanAnandActivity.this.i_money_back_amount = 0; JeevanAnandActivity.this.s_wholelife = "Life time Rs." + Integer.parseInt(JeevanAnandActivity.this.ssa) + " risk cover. "; if (JeevanAnandActivity.this.check_maturity_settlement.isChecked()) { JeevanAnandActivity jeevanAnandActivity78 = JeevanAnandActivity.this; jeevanAnandActivity78.pension_age = jeevanAnandActivity78.iage + JeevanAnandActivity.this.iterm; JeevanAnandActivity.this.final_maturity_amount = Integer.parseInt(JeevanAnandActivity.this.ssa) + JeevanAnandActivity.this.TotalBonus + JeevanAnandActivity.this.FAB; JeevanAnandActivity.this.maturity_settlement_function(); StringBuilder sb31 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity79 = JeevanAnandActivity.this; sb31.append(jeevanAnandActivity79.result); sb31.append(" + \n"); jeevanAnandActivity79.result = sb31.toString(); StringBuilder sb32 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity80 = JeevanAnandActivity.this; sb32.append(jeevanAnandActivity80.result); sb32.append("Life time Rs."); sb32.append(Integer.parseInt(JeevanAnandActivity.this.ssa)); sb32.append(" risk cover. \n"); jeevanAnandActivity80.result = sb32.toString(); } else { JeevanAnandActivity.this.i_maturity_settlement_year = 0; JeevanAnandActivity.this.i_settlement_amount = 0; JeevanAnandActivity jeevanAnandActivity81 = JeevanAnandActivity.this; jeevanAnandActivity81.pension_age = jeevanAnandActivity81.iage + JeevanAnandActivity.this.iterm; JeevanAnandActivity.this.s_return_string = "Return at age of " + JeevanAnandActivity.this.pension_age + " : " + JeevanAnandActivity.this.total_return; } if (JeevanAnandActivity.this.check_medical.isChecked()) { int selectedItemPosition = JeevanAnandActivity.this.spiner_select_category.getSelectedItemPosition(); Integer.valueOf(selectedItemPosition).getClass(); int selectedItemPosition2 = JeevanAnandActivity.this.spiner_income_category.getSelectedItemPosition(); Integer.valueOf(selectedItemPosition2).getClass(); int selectedItemPosition3 = JeevanAnandActivity.this.spiner_education.getSelectedItemPosition(); Integer.valueOf(selectedItemPosition3).getClass(); String medical_function = Function.medical_function(JeevanAnandActivity.this.SUC, JeevanAnandActivity.this.iage, selectedItemPosition, selectedItemPosition2, selectedItemPosition3, JeevanAnandActivity.this.getApplicationContext(), 915); StringBuilder sb33 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity82 = JeevanAnandActivity.this; sb33.append(jeevanAnandActivity82.result); sb33.append("Medical Requirement : "); sb33.append(medical_function); jeevanAnandActivity82.result = sb33.toString(); } if (JeevanAnandActivity.this.check_combo_akshay.isChecked()) { JeevanAnandActivity jeevanAnandActivity83 = JeevanAnandActivity.this; jeevanAnandActivity83.pension_age = jeevanAnandActivity83.iage + JeevanAnandActivity.this.iterm + 1; if (JeevanAnandActivity.this.pension_age >= 30) { StringBuilder sb34 = new StringBuilder(); JeevanAnandActivity jeevanAnandActivity84 = JeevanAnandActivity.this; sb34.append(jeevanAnandActivity84.result); sb34.append("\nPension Start From age : "); sb34.append(JeevanAnandActivity.this.pension_age); sb34.append("\n\n"); jeevanAnandActivity84.result = sb34.toString(); JeevanAnandActivity.this.final_maturity_amount = Integer.parseInt(JeevanAnandActivity.this.ssa) + JeevanAnandActivity.this.TotalBonus + JeevanAnandActivity.this.FAB; } } if (JeevanAnandActivity.this.Combo_true == 1) { CombinationModelDetails combinationModelDetails = new CombinationModelDetails(); combinationModelDetails.setName(JeevanAnandActivity.this.sname); combinationModelDetails.setAge(JeevanAnandActivity.this.iage); combinationModelDetails.setPlan(715); combinationModelDetails.setTerm(JeevanAnandActivity.this.iterm); combinationModelDetails.setPpt(JeevanAnandActivity.this.iterm); combinationModelDetails.setSa(Integer.parseInt(JeevanAnandActivity.this.ssa)); combinationModelDetails.setDsa(JeevanAnandActivity.this.idsa); combinationModelDetails.setDab(JeevanAnandActivity.this.idab); combinationModelDetails.setAddb(JeevanAnandActivity.this.iaddb); combinationModelDetails.setTr(JeevanAnandActivity.this.itr); combinationModelDetails.setPwb(JeevanAnandActivity.this.spwb); combinationModelDetails.setPremium1(i3); combinationModelDetails.setPremium2(i4); combinationModelDetails.setMaturity(JeevanAnandActivity.this.total_return); combinationModelDetails.setMaturity_settlement_year(JeevanAnandActivity.this.i_maturity_settlement_year); combinationModelDetails.setSettlement_amount(JeevanAnandActivity.this.i_settlement_amount); combinationModelDetails.setMoneyback_year(JeevanAnandActivity.this.s_money_back_year); combinationModelDetails.setMoneyback_amount(JeevanAnandActivity.this.i_money_back_amount); combinationModelDetails.setWholelife(JeevanAnandActivity.this.s_wholelife); combinationModelDetails.setReturn_string(JeevanAnandActivity.this.s_return_string); JeevanAnandActivity.this.combinationmodelDetailsObjArrayList.add(combinationModelDetails); JeevanAnandActivity.this.insertPlanDeatails(combinationModelDetails); JeevanAnandActivity.this.setResult(-1, new Intent()); JeevanAnandActivity.this.finish(); } else if (!JeevanAnandActivity.this.pdf_click.booleanValue()) { Intent intent = new Intent(JeevanAnandActivity.this.getApplicationContext(), ResultDisplay.class); intent.putExtra("EXTRA_RESULT", JeevanAnandActivity.this.result); JeevanAnandActivity.this.startActivity(intent); } } else { Toasty.warning(JeevanAnandActivity.this.getApplicationContext(), (CharSequence) "Term Rider S.A. is not higher than S.A.", 1).show(); } } }); } public void insertPlanDeatails(CombinationModelDetails combinationModelDetails) { AndroidOpenDbHelper androidOpenDbHelper = new AndroidOpenDbHelper(this); androidOpenDbHelper.getWritableDatabase(); SQLiteDatabase writableDatabase = androidOpenDbHelper.getWritableDatabase(); ContentValues contentValues = new ContentValues(); contentValues.put("name", combinationModelDetails.getName()); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_AGE, Integer.valueOf(combinationModelDetails.getAge())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_PLAN, Integer.valueOf(combinationModelDetails.getPlan())); contentValues.put("term", Integer.valueOf(combinationModelDetails.getTerm())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_PPT, Integer.valueOf(combinationModelDetails.getPpt())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_SA, Integer.valueOf(combinationModelDetails.getSa())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_DSA, Integer.valueOf(combinationModelDetails.getDsa())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_DAB, Integer.valueOf(combinationModelDetails.getDab())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_ADDB, Integer.valueOf(combinationModelDetails.getAddb())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_TR, Integer.valueOf(combinationModelDetails.getTr())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_PWB, combinationModelDetails.getPwb()); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_PREMIUM1, Integer.valueOf(combinationModelDetails.getPremium1())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_PREMIUM2, Integer.valueOf(combinationModelDetails.getPremium2())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_MATURITY_AMOUNT, Integer.valueOf(combinationModelDetails.getMaturity())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_MATURITY_SETTLEMENT_YEAR, Integer.valueOf(combinationModelDetails.getMaturity_settlement_year())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_SETTLEMENT_AMOUNT, Integer.valueOf(combinationModelDetails.getSettlement_amount())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_MONEYBACK_YEAR, combinationModelDetails.getMoneyback_year()); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_MONEYBACK_AMOUNT, Integer.valueOf(combinationModelDetails.getMoneyback_amount())); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_WHOLELIFE, combinationModelDetails.getWholelife()); contentValues.put(AndroidOpenDbHelper.COLUMN_NAME_RETURN, combinationModelDetails.getReturn_string()); writableDatabase.insert(AndroidOpenDbHelper.TABLE_NAME_COMB, (String) null, contentValues); writableDatabase.close(); } /* access modifiers changed from: private */ public void taxsavedfunction() { int selectedItemPosition = this.taxratespinner.getSelectedItemPosition(); if (selectedItemPosition == 0) { int round = (int) Math.round((double) ((this.yearlypremium * 30) / 100)); this.taxsaved = round; if (round > 45000) { this.taxsaved = 45000; } } else if (selectedItemPosition == 1) { int round2 = (int) Math.round((double) ((this.yearlypremium * 20) / 100)); this.taxsaved = round2; if (round2 > 30000) { this.taxsaved = 30000; } } else if (selectedItemPosition != 2) { int round3 = (int) Math.round((double) ((this.yearlypremium * 30) / 100)); this.taxsaved = round3; if (round3 > 45000) { this.taxsaved = 45000; } } else { int round4 = (int) Math.round((double) ((this.yearlypremium * 5) / 100)); this.taxsaved = round4; if (round4 > 7500) { this.taxsaved = 7500; } } } private void termriderfunction() { this.check_termrider.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(CompoundButton compoundButton, boolean z) { if (JeevanAnandActivity.this.check_termrider.isChecked()) { JeevanAnandActivity.this.tablerow_termsa.setVisibility(0); JeevanAnandActivity.this.e_termvalue.setText(JeevanAnandActivity.this.anand_sa.getText().toString().replaceAll(",", "")); return; } JeevanAnandActivity.this.tablerow_termsa.setVisibility(8); } }); } /* access modifiers changed from: private */ public void premiumTaxcalcFunction() { this.FYPremium = (int) Math.round(this.premiumyly); this.FHPremium = (int) Math.round(this.premiumhly / 2.0d); this.FQPremium = (int) Math.round(this.premiumqly / 4.0d); this.FMPremium = (int) Math.round(this.premiumecs / 12.0d); this.FYTax_1 = (int) Math.round(this.taxon1ypremyly); this.FHTax_1 = (int) Math.round(this.taxon1ypremhly / 2.0d); this.FQTax_1 = (int) Math.round(this.taxon1ypremqly / 4.0d); this.FMTax_1 = (int) Math.round(this.taxon1ypremecs / 12.0d); this.FYTax_2 = (int) Math.round(this.taxon2ypremyly); this.FHTax_2 = (int) Math.round(this.taxon2ypremhly / 2.0d); this.FQTax_2 = (int) Math.round(this.taxon2ypremqly / 4.0d); this.FMTax_2 = (int) Math.round(this.taxon2ypremecs / 12.0d); } /* access modifiers changed from: private */ public void maturity_settlement_function() { int selectedItemPosition = this.yearspinner.getSelectedItemPosition(); int selectedItemPosition2 = this.modespinner.getSelectedItemPosition(); this.s_return_string = ""; if (selectedItemPosition != 0) { if (selectedItemPosition != 1) { if (selectedItemPosition == 2 && selectedItemPosition2 == 0) { this.ylysettlement = (int) Math.round(((double) this.final_maturity_amount) * 0.0908141d); for (int i = 1; i <= 15; i++) { this.result += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.s_return_string += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.pension_age++; } this.i_maturity_settlement_year = 15; this.i_settlement_amount = this.ylysettlement; } } else if (selectedItemPosition2 == 0) { this.ylysettlement = (int) Math.round(((double) this.final_maturity_amount) * 0.12334d); for (int i2 = 1; i2 <= 10; i2++) { this.result += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.s_return_string += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.pension_age++; } this.i_maturity_settlement_year = 10; this.i_settlement_amount = this.ylysettlement; } } else if (selectedItemPosition2 == 0) { this.ylysettlement = (int) Math.round(((double) this.final_maturity_amount) * 0.21998d); for (int i3 = 1; i3 <= 5; i3++) { this.result += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.s_return_string += "Approx Maturity Return at the age of " + this.pension_age + " : " + this.ylysettlement + "\n\n"; this.pension_age++; } this.i_maturity_settlement_year = 5; this.i_settlement_amount = this.ylysettlement; } } private void checkspinnerdefine() { this.modespinner.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"Yearly", "Halfly"})); this.yearspinner.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"5", "10", "15"})); this.taxratespinner.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"30%", "20%", "5%"})); this.spiner_select_category.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"Employed", "Business", "Professional", "Major Students", "Others"})); this.spiner_income_category.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"Income > 10lakh", "Income > 2.5lakh", "Others"})); this.spiner_education.setAdapter(new ArrayAdapter(getApplicationContext(), R.layout.spinner_item, new String[]{"Post Graduate", "Graduate", "Professional", "HSC/Plus2", "SSC", "Others"})); this.check_taxsaved.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(CompoundButton compoundButton, boolean z) { if (JeevanAnandActivity.this.check_taxsaved.isChecked()) { JeevanAnandActivity.this.tablerow_taxsaved.setVisibility(0); } else { JeevanAnandActivity.this.tablerow_taxsaved.setVisibility(8); } } }); this.check_maturity_settlement.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(CompoundButton compoundButton, boolean z) { if (JeevanAnandActivity.this.check_maturity_settlement.isChecked()) { JeevanAnandActivity.this.check_combo_akshay.setChecked(false); JeevanAnandActivity.this.check_maturity.setChecked(false); JeevanAnandActivity.this.tablerow_settlement_year.setVisibility(0); JeevanAnandActivity.this.tablerow_settlement_mode.setVisibility(8); return; } JeevanAnandActivity.this.tablerow_settlement_year.setVisibility(8); JeevanAnandActivity.this.tablerow_settlement_mode.setVisibility(8); } }); this.check_medical.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(CompoundButton compoundButton, boolean z) { if (JeevanAnandActivity.this.check_medical.isChecked()) { JeevanAnandActivity.this.ll_medical_layout.setVisibility(0); } else { JeevanAnandActivity.this.ll_medical_layout.setVisibility(8); } } }); this.check_maturity.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(CompoundButton compoundButton, boolean z) { if (JeevanAnandActivity.this.check_maturity.isChecked()) { JeevanAnandActivity.this.check_maturity_settlement.setChecked(false); } } }); } /* access modifiers changed from: private */ public void fabCalculationFunction(int i) { switch (i) { case 12: this.FAB = 0; return; case 13: this.FAB = 0; return; case 14: this.FAB = 0; return; case 15: int i2 = this.isa; if (i2 < 100 || i2 >= 200) { this.FAB = i2 * 20; return; } else { this.FAB = i2 * 10; return; } case 16: int i3 = this.isa; if (i3 < 100 || i3 >= 200) { this.FAB = i3 * 25; return; } else { this.FAB = i3 * 15; return; } case 17: int i4 = this.isa; if (i4 < 100 || i4 >= 200) { this.FAB = i4 * 30; return; } else { this.FAB = i4 * 20; return; } case 18: int i5 = this.isa; if (i5 < 100 || i5 >= 200) { this.FAB = i5 * 35; return; } else { this.FAB = i5 * 25; return; } case 19: int i6 = this.isa; if (i6 < 100 || i6 >= 200) { this.FAB = i6 * 50; return; } else { this.FAB = i6 * 30; return; } case 20: int i7 = this.isa; if (i7 < 100 || i7 >= 200) { this.FAB = i7 * 70; return; } else { this.FAB = i7 * 40; return; } case 21: int i8 = this.isa; if (i8 < 100 || i8 >= 200) { this.FAB = i8 * 100; return; } else { this.FAB = i8 * 50; return; } case 22: int i9 = this.isa; if (i9 < 100 || i9 >= 200) { this.FAB = i9 * 150; return; } else { this.FAB = i9 * 80; return; } case 23: int i10 = this.isa; if (i10 < 100 || i10 >= 200) { this.FAB = i10 * ItemTouchHelper.Callback.DEFAULT_SWIPE_ANIMATION_DURATION; return; } else { this.FAB = i10 * 150; return; } case 24: int i11 = this.isa; if (i11 < 100 || i11 >= 200) { this.FAB = i11 * 350; return; } else { this.FAB = i11 * 230; return; } case 25: int i12 = this.isa; if (i12 < 100 || i12 >= 200) { this.FAB = i12 * 450; return; } else { this.FAB = i12 * TIFFConstants.TIFFTAG_SUBIFD; return; } case 26: int i13 = this.isa; if (i13 < 100 || i13 >= 200) { this.FAB = i13 * 550; return; } else { this.FAB = i13 * 430; return; } case 27: int i14 = this.isa; if (i14 < 100 || i14 >= 200) { this.FAB = i14 * 670; return; } else { this.FAB = i14 * 540; return; } case 28: int i15 = this.isa; if (i15 < 100 || i15 >= 200) { this.FAB = i15 * 790; return; } else { this.FAB = i15 * 650; return; } case 29: int i16 = this.isa; if (i16 < 100 || i16 >= 200) { this.FAB = i16 * 910; return; } else { this.FAB = i16 * 760; return; } case 30: int i17 = this.isa; if (i17 < 100 || i17 >= 200) { this.FAB = i17 * 1100; return; } else { this.FAB = i17 * 900; return; } case 31: int i18 = this.isa; if (i18 < 100 || i18 >= 200) { this.FAB = i18 * 1300; return; } else { this.FAB = i18 * 1100; return; } case 32: int i19 = this.isa; if (i19 < 100 || i19 >= 200) { this.FAB = i19 * 1550; return; } else { this.FAB = i19 * 1300; return; } case 33: int i20 = this.isa; if (i20 < 100 || i20 >= 200) { this.FAB = i20 * 1800; return; } else { this.FAB = i20 * 1550; return; } case 34: int i21 = this.isa; if (i21 < 100 || i21 >= 200) { this.FAB = i21 * 2050; return; } else { this.FAB = i21 * 1700; return; } case 35: int i22 = this.isa; if (i22 < 100 || i22 >= 200) { this.FAB = i22 * 2300; return; } else { this.FAB = i22 * 1850; return; } default: this.FAB = 0; return; } } /* access modifiers changed from: private */ public void createPdf() throws FileNotFoundException { PdfFont pdfFont; long j; int i; int i2; int i3; int i4; this.pdfPath = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString(); this.iplan_no = 915; String str = this.sname; if (str == null || str.trim().length() != 0) { this.pdfname = "/LIC_RR/Plan_" + this.iplan_no + "_" + this.sname + "_" + this.currentTime + ".pdf"; } else { this.pdfname = "/LIC_RR/Plan_" + this.iplan_no + "_RR_" + this.currentTime + ".pdf"; } File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + "/LIC_RR/"); if (!file.exists()) { file.mkdir(); } File file2 = new File(this.pdfPath, this.pdfname); new FileOutputStream(file2); PdfDocument pdfDocument = new PdfDocument(new PdfWriter(file2)); Document document = new Document(pdfDocument); pdfDocument.setDefaultPageSize(PageSize.A4); pdfDocument.addEventHandler(PdfDocumentEvent.END_PAGE, new Footer()); pdfDocument.addEventHandler(PdfDocumentEvent.END_PAGE, new WatermarkingEventHandler()); pdfDocument.addEventHandler(PdfDocumentEvent.START_PAGE, new PageBorderEventHandler()); Table useAllAvailableWidth = new Table(1).useAllAvailableWidth(); Cell add = new Cell().add((IBlockElement) new Paragraph("Plan presentation prepared by : " + My_name)); add.setTextAlignment(TextAlignment.CENTER); add.setBackgroundColor(ColorConstants.ORANGE); useAllAvailableWidth.addCell(add); Cell add2 = new Cell().add((IBlockElement) new Paragraph("Mobile : " + this.My_number + ", Email : " + this.My_email)); add2.setTextAlignment(TextAlignment.CENTER); add2.setBackgroundColor(ColorConstants.LIGHT_GRAY); useAllAvailableWidth.addCell(add2); pdfDocument.addEventHandler(PdfDocumentEvent.END_PAGE, new TableFooterEventHandler(useAllAvailableWidth)); document.setMargins(36.0f, 36.0f, 100.0f, 36.0f); Paragraph paragraph = new Paragraph("\n"); Table useAllAvailableWidth2 = new Table(1).useAllAvailableWidth(); useAllAvailableWidth2.addCell((Cell) ((Cell) ((Cell) new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("New Jeevan Anand (Plan No: 915) ").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setBorder(Border.NO_BORDER)).setBackgroundColor(new DeviceRgb(255, 195, 0))).setTextAlignment(TextAlignment.CENTER)); StringBuilder sb = new StringBuilder("Premium Payment Mode: "); sb.append(getString(R.string.h2_815_info)); Table table = new Table(new float[]{135.0f, 60.0f, 75.0f, 75.0f, 110.0f}); table.setHorizontalAlignment(HorizontalAlignment.CENTER); String str2 = "\n"; Paragraph paragraph2 = (Paragraph) ((Paragraph) new Paragraph("On Survival : " + getString(R.string.h12_815_info)).setBold()).setFontSize(14.0f); table.addCell(new Cell(1, 5).add((IBlockElement) ((Paragraph) ((Paragraph) ((Paragraph) new Paragraph("Proposer Details").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph(XfdfConstants.NAME_CAPITAL).setBold()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph(HttpHeaders.AGE).setBold()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("Sum Assured").setBold()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("Policy Term").setBold()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("Premium Payment Term").setBold()).setTextAlignment(TextAlignment.CENTER))); Cell cell = new Cell(); StringBuilder sb2 = new StringBuilder(""); Paragraph paragraph3 = (Paragraph) ((Paragraph) new Paragraph("Policy Benefits : ").setBold()).setFontSize(14.0f); sb2.append(this.sname); table.addCell(cell.add((IBlockElement) new Paragraph(sb2.toString()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) new Paragraph("" + this.sage).setTextAlignment(TextAlignment.CENTER))); Cell cell2 = new Cell(); StringBuilder sb3 = new StringBuilder(""); Paragraph paragraph4 = (Paragraph) ((Paragraph) new Paragraph("Sum Assured Range: Minimum 1 Lakh and Maximum No Limit. ").setBold()).setFontSize(14.0f); Paragraph paragraph5 = (Paragraph) ((Paragraph) new Paragraph("Product Summary : " + getString(R.string.h1_815_info)).setBold()).setFontSize(15.0f); Paragraph paragraph6 = (Paragraph) ((Paragraph) new Paragraph(sb.toString()).setBold()).setFontSize(14.0f); sb3.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))); table.addCell(cell2.add((IBlockElement) new Paragraph(sb3.toString()).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) new Paragraph("" + (100 - Integer.parseInt(this.sage))).setTextAlignment(TextAlignment.CENTER))); table.addCell(new Cell().add((IBlockElement) new Paragraph("" + this.sterm).setTextAlignment(TextAlignment.CENTER))); document.add((IBlockElement) paragraph); document.add((IBlockElement) useAllAvailableWidth2); document.add((IBlockElement) paragraph); document.add((IBlockElement) paragraph5); document.add((IBlockElement) paragraph); document.add((IBlockElement) paragraph6); document.add((IBlockElement) (Paragraph) ((Paragraph) new Paragraph("Term : " + getString(R.string.h3_815_info)).setBold()).setFontSize(14.0f)); document.add((IBlockElement) (Paragraph) ((Paragraph) new Paragraph("Minimum & Maximum Age : 8 Year Completed to 55 Year (Nearest Birthday)").setBold()).setFontSize(14.0f)); document.add((IBlockElement) paragraph4); document.add((IBlockElement) paragraph3); document.add((IBlockElement) (Paragraph) ((Paragraph) new Paragraph("On Death : \n" + getString(R.string.h11_815_info_1) + "\n" + getString(R.string.h11_815_info_2) + "\n" + getString(R.string.h11_815_info_3)).setBold()).setFontSize(14.0f)); document.add((IBlockElement) paragraph2); document.add(new AreaBreak(AreaBreakType.NEXT_PAGE)); document.add((IBlockElement) table); document.add((IBlockElement) paragraph); Table table2 = new Table(4); table2.setHorizontalAlignment(HorizontalAlignment.CENTER); table2.addCell(new Cell(1, 4).add((IBlockElement) ((Paragraph) ((Paragraph) ((Paragraph) new Paragraph("First Year Premium").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setTextAlignment(TextAlignment.CENTER))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Mode").setBold())); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Premium").setBold())); table2.addCell(new Cell().add((IBlockElement) new Paragraph("GST(4.5%)").setBold())); table2.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("Payable Premium").setBold()).setTextAlignment(TextAlignment.CENTER))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Yearly"))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FYPremium)))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FYTax_1)))); table2.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_yly_1)).setBold()).setTextAlignment(TextAlignment.CENTER))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Half Yearly"))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FHPremium)))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FHTax_1)))); table2.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_hly_1)).setBold()).setTextAlignment(TextAlignment.CENTER))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Quarterly"))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FQPremium)))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FQTax_1)))); table2.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_qly_1)).setBold()).setTextAlignment(TextAlignment.CENTER))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("Monthly"))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FMPremium)))); table2.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FMTax_1)))); table2.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_mly_1)).setBold()).setTextAlignment(TextAlignment.CENTER))); table2.getHeader(); document.add((IBlockElement) table2); document.add((IBlockElement) paragraph); Table table3 = new Table(4); table3.setHorizontalAlignment(HorizontalAlignment.CENTER); table3.addCell(new Cell(1, 4).add((IBlockElement) ((Paragraph) ((Paragraph) ((Paragraph) new Paragraph("Subsequent Year Premium").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setTextAlignment(TextAlignment.CENTER))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Mode").setBold())); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Premium").setBold())); table3.addCell(new Cell().add((IBlockElement) new Paragraph("GST(2.5%)").setBold())); table3.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("Payable Premium").setBold()).setTextAlignment(TextAlignment.CENTER))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Yearly"))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FYPremium)))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FYTax_2)))); table3.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_yly_2)).setBold()).setTextAlignment(TextAlignment.CENTER))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Half Yearly"))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FHPremium)))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FHTax_2)))); table3.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_hly_2)).setBold()).setTextAlignment(TextAlignment.CENTER))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Quarterly"))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FQPremium)))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FQTax_2)))); table3.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_qly_2)).setBold()).setTextAlignment(TextAlignment.CENTER))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("Monthly"))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FMPremium)))); table3.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FMTax_2)))); table3.addCell(new Cell().add((IBlockElement) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_mly_2)).setBold()).setTextAlignment(TextAlignment.CENTER))); table3.getHeader(); document.add((IBlockElement) table3); document.add((IBlockElement) paragraph); Table useAllAvailableWidth3 = new Table(1).useAllAvailableWidth(); useAllAvailableWidth3.addCell((Cell) ((Cell) ((Cell) new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("Maturity Benefit").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setBorder(Border.NO_BORDER)).setBackgroundColor(new DeviceRgb(255, 195, 0))).setTextAlignment(TextAlignment.CENTER)); document.add((IBlockElement) useAllAvailableWidth3); document.add((IBlockElement) paragraph); Table table4 = new Table(2); table4.setHorizontalAlignment(HorizontalAlignment.CENTER); table4.addCell(new Cell(1, 2).add((IBlockElement) ((Paragraph) ((Paragraph) ((Paragraph) new Paragraph("Approximate Return at Maturity Time").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setTextAlignment(TextAlignment.CENTER))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("Sum Assured :"))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("Bonus:"))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.TotalBonus)))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("F.A.B. :"))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.FAB)))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("Total (S.A. + Bonus + F.A.B.):"))); int parseInt = Integer.parseInt(this.ssa) + this.TotalBonus + this.FAB; Cell cell3 = new Cell(); StringBuilder sb4 = new StringBuilder(""); long j2 = (long) parseInt; sb4.append(NumberFormat.getNumberInstance(this.indiaLocale).format(j2)); table4.addCell(cell3.add((IBlockElement) new Paragraph(sb4.toString()))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("Total Paid Premium:"))); table4.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.Toatlpaid)))); table4.getHeader(); document.add((IBlockElement) table4); document.add(new AreaBreak()); document.add((IBlockElement) paragraph); Table table5 = new Table(5); table5.setHorizontalAlignment(HorizontalAlignment.CENTER); table5.addHeaderCell(new Cell(1, 5).add((IBlockElement) ((Paragraph) ((Paragraph) ((Paragraph) new Paragraph("Benefit and Coverage Table").setFontSize(20.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setTextAlignment(TextAlignment.CENTER))); table5.addHeaderCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("AGE").setBold()).setTextAlignment(TextAlignment.CENTER)).setFontColor(new DeviceRgb(27, 40, 62)))); table5.addHeaderCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("YLY Premium").setBold()).setTextAlignment(TextAlignment.CENTER)).setFontColor(new DeviceRgb(27, 40, 62)))); table5.addHeaderCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph(FontStretches.NORMAL).setBold()).setTextAlignment(TextAlignment.CENTER)).setFontColor(new DeviceRgb(27, 40, 62)))); table5.addHeaderCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("Accidental").setBold()).setTextAlignment(TextAlignment.CENTER)).setFontColor(new DeviceRgb(27, 40, 62)))); table5.addHeaderCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("Return").setBold()).setTextAlignment(TextAlignment.CENTER)).setFontColor(new DeviceRgb(27, 40, 62)))); int i5 = this.death_sa; int parseInt2 = this.check_dab.isChecked() ? this.death_sa + Integer.parseInt(this.ssa) : i5; if (this.check_termrider.isChecked()) { int i6 = this.itr; i5 += i6; parseInt2 += i6; } int i7 = this.pdf_bonus; int i8 = i5 + i7; int i9 = parseInt2 + i7; table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(this.iage)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_yly_1)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) i8)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) i9)).setTextAlignment(TextAlignment.CENTER))); Cell cell4 = new Cell(); StringBuilder sb5 = new StringBuilder(""); int i10 = parseInt; sb5.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) 0)); table5.addCell(cell4.add((IBlockElement) new Paragraph(sb5.toString()).setTextAlignment(TextAlignment.CENTER))); int i11 = this.iage + 1; int i12 = i8; int i13 = 0; int i14 = 1; for (int i15 = 100; i11 <= i15; i15 = 100) { int i16 = i14 + 1; fabCalculationFunction(i16); int i17 = this.pdf_bonus; i12 += i17; int i18 = i9 + i17; if (this.check_maturity_settlement.isChecked()) { int i19 = this.iage; int i20 = this.iterm; i2 = i16; if (i11 == i19 + i20) { i13 = this.i_settlement_amount; table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); Cell cell5 = new Cell(); StringBuilder sb6 = new StringBuilder(""); i = i10; j = j2; sb6.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))); table5.addCell(cell5.add((IBlockElement) new Paragraph(sb6.toString()).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) i13)).setTextAlignment(TextAlignment.CENTER)).setBold()).setFontColor(new DeviceRgb(27, 40, 62)))); } else { j = j2; i = i10; if (i11 <= i19 + i20 || i11 >= i19 + i20 + this.i_maturity_settlement_year) { if (i11 > i19 + i20) { table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); Cell cell6 = new Cell(); StringBuilder sb7 = new StringBuilder(""); i3 = i18; sb7.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))); table5.addCell(cell6.add((IBlockElement) new Paragraph(sb7.toString()).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); i4 = i13; } else { i3 = i18; table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_yly_2)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) (this.FAB + i12))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) (this.FAB + i3))).setTextAlignment(TextAlignment.CENTER))); Cell cell7 = new Cell(); StringBuilder sb8 = new StringBuilder(""); i4 = i13; sb8.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) i4)); table5.addCell(cell7.add((IBlockElement) new Paragraph(sb8.toString()).setTextAlignment(TextAlignment.CENTER))); } i13 = i4; i11++; i9 = i3; i14 = i2; i10 = i; j2 = j; } else { i13 = this.i_settlement_amount; table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) i13)).setTextAlignment(TextAlignment.CENTER))); } } i3 = i18; } else { i2 = i16; j = j2; i = i10; i3 = i18; i4 = i13; int i21 = this.iage; int i22 = this.iterm; if (i11 == i21 + i22) { table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format(j)).setTextAlignment(TextAlignment.CENTER)).setBold()).setFontColor(new DeviceRgb(27, 40, 62)))); i13 = i; } else { long j3 = j; if (i11 > i21 + i22) { table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); Cell cell8 = new Cell(); StringBuilder sb9 = new StringBuilder(""); j = j3; sb9.append(NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))); table5.addCell(cell8.add((IBlockElement) new Paragraph(sb9.toString()).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) Integer.parseInt(this.ssa))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("0").setTextAlignment(TextAlignment.CENTER))); } else { j = j3; table5.addCell(new Cell().add((IBlockElement) new Paragraph(String.valueOf(i11)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) this.F_yly_2)).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) (this.FAB + i12))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) (this.FAB + i3))).setTextAlignment(TextAlignment.CENTER))); table5.addCell(new Cell().add((IBlockElement) new Paragraph("" + NumberFormat.getNumberInstance(this.indiaLocale).format((long) i4)).setTextAlignment(TextAlignment.CENTER))); } i13 = i4; i11++; i9 = i3; i14 = i2; i10 = i; j2 = j; } } i11++; i9 = i3; i14 = i2; i10 = i; j2 = j; } table5.setWidth(UnitValue.createPercentValue(75.0f)); table5.getHeader(); document.add((IBlockElement) table5); document.add((IBlockElement) new Paragraph("\n Surrender Value at age 100 :(Basic Sum Assured) = " + this.ssa + str2)); document.add((IBlockElement) paragraph); Table useAllAvailableWidth4 = new Table(1).useAllAvailableWidth(); useAllAvailableWidth4.addCell((Cell) ((Cell) ((Cell) new Cell().add((IBlockElement) ((Paragraph) ((Paragraph) new Paragraph("Disclaimer").setFontSize(16.0f)).setBold()).setFontColor(new DeviceRgb(0, 0, 0))).setBorder(Border.NO_BORDER)).setBackgroundColor(new DeviceRgb(255, 195, 0))).setTextAlignment(TextAlignment.CENTER)); document.add((IBlockElement) useAllAvailableWidth4); document.add((IBlockElement) new Paragraph(getString(R.string.pdf_disclaimer))); try { pdfFont = PdfFontFactory.createFont("Courier"); } catch (IOException e) { e.printStackTrace(); pdfFont = null; } Style style = (Style) ((Style) ((Style) ((Style) new Style().setFont(pdfFont)).setFontSize(14.0f)).setFontColor(ColorConstants.RED)).setBackgroundColor(ColorConstants.LIGHT_GRAY); document.close(); this.iplan_no = 815; } private static class Footer implements IEventHandler { private Footer() { } public void handleEvent(Event event) { PdfDocumentEvent pdfDocumentEvent = (PdfDocumentEvent) event; PdfDocument document = pdfDocumentEvent.getDocument(); PdfPage page = pdfDocumentEvent.getPage(); Rectangle pageSize = page.getPageSize(); ((Canvas) new Canvas(page, pageSize).showTextAligned(String.valueOf(document.getPageNumber(page)), (pageSize.getLeft() + pageSize.getRight()) / 2.0f, pageSize.getBottom() + 10.0f, TextAlignment.CENTER)).close(); } } private static class WatermarkingEventHandler implements IEventHandler { private WatermarkingEventHandler() { } public void handleEvent(Event event) { PdfFont pdfFont; PdfDocumentEvent pdfDocumentEvent = (PdfDocumentEvent) event; PdfDocument document = pdfDocumentEvent.getDocument(); PdfPage page = pdfDocumentEvent.getPage(); try { pdfFont = PdfFontFactory.createFont(StandardFonts.HELVETICA_BOLD); } catch (com.itextpdf.io.exceptions.IOException | IOException e) { System.err.println(e.getMessage()); pdfFont = null; } ((Canvas) ((Canvas) ((Canvas) ((Canvas) new Canvas(new PdfCanvas(page.newContentStreamBefore(), page.getResources(), document), page.getPageSize()).setFontColor(ColorConstants.LIGHT_GRAY)).setFontSize(60.0f)).setFont(pdfFont)).showTextAligned((Paragraph) new Paragraph(JeevanAnandActivity.My_name).setOpacity(Float.valueOf(0.2f)), 297.5f, 421.0f, document.getPageNumber(page), TextAlignment.CENTER, VerticalAlignment.MIDDLE, 0.0f)).close(); } } private static class PageBackgroundsEventHandler implements IEventHandler { private PageBackgroundsEventHandler() { } public void handleEvent(Event event) { PdfDocumentEvent pdfDocumentEvent = (PdfDocumentEvent) event; PdfPage page = pdfDocumentEvent.getPage(); int numberOfPages = pdfDocumentEvent.getDocument().getNumberOfPages(); if (numberOfPages % 2 != 1 || numberOfPages == 1) { PdfCanvas pdfCanvas = new PdfCanvas(page); pdfCanvas.saveState().setFillColor(ColorConstants.LIGHT_GRAY).rectangle(page.getPageSize()).fillStroke().restoreState(); } } } private static class PageBorderEventHandler implements IEventHandler { private PageBorderEventHandler() { } public void handleEvent(Event event) { PdfDocumentEvent pdfDocumentEvent = (PdfDocumentEvent) event; PdfCanvas pdfCanvas = new PdfCanvas(pdfDocumentEvent.getPage()); pdfCanvas.setLineWidth(5.0f).setStrokeColor(new DeviceRgb(84, 110, 122)).rectangle(pdfDocumentEvent.getPage().getPageSize()).stroke(); } } private static class TableFooterEventHandler implements IEventHandler { private Table table; public TableFooterEventHandler(Table table2) { this.table = table2; } public void handleEvent(Event event) { PdfDocumentEvent pdfDocumentEvent = (PdfDocumentEvent) event; PdfDocument document = pdfDocumentEvent.getDocument(); PdfPage page = pdfDocumentEvent.getPage(); ((Canvas) new Canvas(new PdfCanvas(page.newContentStreamBefore(), page.getResources(), document), new Rectangle(36.0f, 20.0f, page.getPageSize().getWidth() - 72.0f, 50.0f)).add((IBlockElement) this.table)).close(); } } private boolean isWriteStorageAllowed() { return ContextCompat.checkSelfPermission(this, "android.permission.WRITE_EXTERNAL_STORAGE") == 0; } private void requestWriteStoragePermission() { ActivityCompat.shouldShowRequestPermissionRationale(this, "android.permission.WRITE_EXTERNAL_STORAGE"); ActivityCompat.requestPermissions(this, new String[]{"android.permission.WRITE_EXTERNAL_STORAGE"}, this.STORAGE_PERMISSION_CODE); } public void onRequestPermissionsResult(int i, String[] strArr, int[] iArr) { super.onRequestPermissionsResult(i, strArr, iArr); if (i != this.STORAGE_PERMISSION_CODE) { return; } if ((iArr.length <= 0 || iArr[0] != 0) && Build.VERSION.SDK_INT < 29) { Toast.makeText(this, "You need to allow this permission to Create PDF.", 1).show(); } } }