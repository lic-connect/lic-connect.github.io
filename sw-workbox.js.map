{"version":3,"file":"sw-workbox.js","sources":["../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_version.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/logger.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/models/messages/messageGenerator.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/WorkboxError.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/_version.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/utils/constants.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/utils/normalizeHandler.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/Route.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/RegExpRoute.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/Router.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/cacheNames.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/waitUntil.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/_version.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/createCacheKey.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/copyResponse.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/Deferred.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/models/quotaErrorCallbacks.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-strategies/_version.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-strategies/StrategyHandler.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/timeout.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/getFriendlyURL.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-strategies/Strategy.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/PrecacheStrategy.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/PrecacheController.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/PrecacheRoute.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/generateURLVariations.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/addRoute.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-routing/registerRoute.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/precacheAndRoute.js","../../../../SUNILV~1/AppData/Local/Temp/ba93e60612b1902289507a0d66dda88b/sw-workbox.js","../../../AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/precache.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:7.2.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:7.2.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:7.2.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:7.2.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillBeUsed()\n     * - cachedResponseWillBeUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillBeUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","import {precacheAndRoute as workbox_precaching_precacheAndRoute} from 'C:/Users/sunil vasarkar/AppData/Roaming/npm/node_modules/workbox-cli/node_modules/workbox-precaching/precacheAndRoute.mjs';/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n\n\n\n\n\n\n\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n\n\n\n/**\n * The precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nworkbox_precaching_precacheAndRoute([\n  {\n    \"url\": \"714_BSMDT_final.html\",\n    \"revision\": \"b3615a57e56847788ec5f3149dee874a\"\n  },\n  {\n    \"url\": \"714_BSMDT_new.html\",\n    \"revision\": \"01ba9c642d3acf1c6342dcdc1c8d2424\"\n  },\n  {\n    \"url\": \"714_BSMDT.html\",\n    \"revision\": \"4d95fb0a4235bbc6e34a94b5e1b45dd3\"\n  },\n  {\n    \"url\": \"714_details.html\",\n    \"revision\": \"a17f29d68f16a6a12aa4f56914ada61f\"\n  },\n  {\n    \"url\": \"714_termrider_pwb.html\",\n    \"revision\": \"2ad5c3de567469d840e1e26779336ff7\"\n  },\n  {\n    \"url\": \"715_BSMDT_new.html\",\n    \"revision\": \"447eb75c081b1d07ea908514177cea7b\"\n  },\n  {\n    \"url\": \"715_BSMDT.html\",\n    \"revision\": \"4723abd2c860356556c95b80cca1c35e\"\n  },\n  {\n    \"url\": \"715_details.html\",\n    \"revision\": \"694adbf29325bf2fc84b0a847a20a551\"\n  },\n  {\n    \"url\": \"715.js\",\n    \"revision\": \"c744c526f71b80733fdd65aad6928430\"\n  },\n  {\n    \"url\": \"717_BSMDT.html\",\n    \"revision\": \"de2e7b41d86e0174164a7df31e7b7f8c\"\n  },\n  {\n    \"url\": \"717_BSMDT1K.html\",\n    \"revision\": \"51aafe2da1266b403a70ad075bb10455\"\n  },\n  {\n    \"url\": \"717_BSMDT2K.html\",\n    \"revision\": \"1270afb3807ac334069e3a819f026f31\"\n  },\n  {\n    \"url\": \"717_BSMDT3K.html\",\n    \"revision\": \"b93e68bf2bde11491086d33d28a43c78\"\n  },\n  {\n    \"url\": \"717_calc1.html\",\n    \"revision\": \"f004468fab27af71f9c7a3071252e880\"\n  },\n  {\n    \"url\": \"717_details.html\",\n    \"revision\": \"16e0f72c3cadad26156639f7eaeaf067\"\n  },\n  {\n    \"url\": \"720_BSMDT_new.html\",\n    \"revision\": \"6cfd6cbac56702151edea3b9b8729221\"\n  },\n  {\n    \"url\": \"720_BSMDT.html\",\n    \"revision\": \"46996d443c1b7855f5a518f67cda5133\"\n  },\n  {\n    \"url\": \"720_chatgpt.html\",\n    \"revision\": \"f6f19cb02a59531e484edaf121cca10d\"\n  },\n  {\n    \"url\": \"720_details.html\",\n    \"revision\": \"475a479df8e289af3c48a93f0bd5ddae\"\n  },\n  {\n    \"url\": \"720_finalcalculator.html\",\n    \"revision\": \"80065fb200e76c22fc8e96faffbbd77c\"\n  },\n  {\n    \"url\": \"720_finalcalculator1.html\",\n    \"revision\": \"3d9142961fb9101db3473af11b621fa6\"\n  },\n  {\n    \"url\": \"720_trial.html\",\n    \"revision\": \"dbf094bb19e9f7805bdfd9ab66b1a6ae\"\n  },\n  {\n    \"url\": \"721_BSMDT_new.html\",\n    \"revision\": \"5199124b0581b2a1476d5cff76503221\"\n  },\n  {\n    \"url\": \"721_BSMDT.html\",\n    \"revision\": \"ed83c37887eafbb59aa04b06769f82a1\"\n  },\n  {\n    \"url\": \"721_details.html\",\n    \"revision\": \"411d3c1f29cf27853c73f9c3bffe386b\"\n  },\n  {\n    \"url\": \"721_final.html\",\n    \"revision\": \"5e79174b0631a0d3734087f894628ffb\"\n  },\n  {\n    \"url\": \"732_BSMDT (1).html\",\n    \"revision\": \"b3c805a59f7b2df146ebb0d295d938a1\"\n  },\n  {\n    \"url\": \"732_BSMDT_final.html\",\n    \"revision\": \"5f95e85d0e1e90ee4c295af3f0fc44e8\"\n  },\n  {\n    \"url\": \"732_BSMDT_new.html\",\n    \"revision\": \"970a1a5ba2e6e19775a6d1bff39a9ac5\"\n  },\n  {\n    \"url\": \"732_BSMDT.html\",\n    \"revision\": \"d76568cd69fdcde684e8a5a0c4a40b03\"\n  },\n  {\n    \"url\": \"732_BSMDT1000K.html\",\n    \"revision\": \"b3c805a59f7b2df146ebb0d295d938a1\"\n  },\n  {\n    \"url\": \"732_details.html\",\n    \"revision\": \"4d62b34a85fbdf2bafecb3ce999019cf\"\n  },\n  {\n    \"url\": \"733_BSMDT_new.html\",\n    \"revision\": \"18a8af15d8e305446c4a2a28f898cc29\"\n  },\n  {\n    \"url\": \"733_BSMDT.html\",\n    \"revision\": \"b06c5eccf086b17ee0c3d6a1e0b0e956\"\n  },\n  {\n    \"url\": \"733_details.html\",\n    \"revision\": \"37c29f0eecfd19ac06237b2a691a796b\"\n  },\n  {\n    \"url\": \"734_BSMDT_final.html\",\n    \"revision\": \"51f36b0401c787bec3859a7ac6527873\"\n  },\n  {\n    \"url\": \"734_BSMDT_new.html\",\n    \"revision\": \"621cf975bbfeb9d4238600fcca09a9ee\"\n  },\n  {\n    \"url\": \"734_BSMDT.html\",\n    \"revision\": \"087e8c82ee312bb0de8af26362826f0a\"\n  },\n  {\n    \"url\": \"734_details.html\",\n    \"revision\": \"42c0bd405f4ea8137a61dcc7b6018df2\"\n  },\n  {\n    \"url\": \"734_final.html\",\n    \"revision\": \"11b428d269f49ec193ebf1434d1f46a2\"\n  },\n  {\n    \"url\": \"736_allinone.html\",\n    \"revision\": \"adc1feb3835d6b102e73e7d08f726851\"\n  },\n  {\n    \"url\": \"736_BSMDT_final.html\",\n    \"revision\": \"c9a604eb2bc5995d8b854a958bc78b09\"\n  },\n  {\n    \"url\": \"736_BSMDT_new.html\",\n    \"revision\": \"3e1efa04d308ee4f47c25695dd50ea99\"\n  },\n  {\n    \"url\": \"736_BSMDT.html\",\n    \"revision\": \"5e35b986acfd48b83fbe03aad7958f9f\"\n  },\n  {\n    \"url\": \"736_details.html\",\n    \"revision\": \"05490cc3d0cd0750d09be86ef58ddd9e\"\n  },\n  {\n    \"url\": \"745_BSMDT_final.html\",\n    \"revision\": \"934eae8e93d6dbf698ac85e5ea79a6ea\"\n  },\n  {\n    \"url\": \"745_BSMDT_new.html\",\n    \"revision\": \"5cf100b886cff43e6b8b023e77fb1f4e\"\n  },\n  {\n    \"url\": \"745_BSMDT.html\",\n    \"revision\": \"d655a947b794f43cc4afeb7ff5594017\"\n  },\n  {\n    \"url\": \"745_calc1.html\",\n    \"revision\": \"aafe433a8b21c0b2d26cecbae8b5b5f7\"\n  },\n  {\n    \"url\": \"745_details.html\",\n    \"revision\": \"b3b4438ec5de402130bf9def8cfecce8\"\n  },\n  {\n    \"url\": \"745_final.html\",\n    \"revision\": \"0bc08c8b323371df3a8ce71dab48addb\"\n  },\n  {\n    \"url\": \"745-calculator.html\",\n    \"revision\": \"70d5d6ed7ebe485553b4919ed81c88d9\"\n  },\n  {\n    \"url\": \"748_allinone.html\",\n    \"revision\": \"efeed7c4c19b5dd5ef5134edabcd606f\"\n  },\n  {\n    \"url\": \"748_BSMDT (1).html\",\n    \"revision\": \"eeaf247d8926998c841929622eeefe7f\"\n  },\n  {\n    \"url\": \"748_BSMDT.html\",\n    \"revision\": \"eeaf247d8926998c841929622eeefe7f\"\n  },\n  {\n    \"url\": \"748_details.html\",\n    \"revision\": \"ef44739e2a1701bd4f13ef03c542cfdf\"\n  },\n  {\n    \"url\": \"748_latest.html\",\n    \"revision\": \"6d9316ec1b3945d064db13bf7b223c36\"\n  },\n  {\n    \"url\": \"751_BSMDT.html\",\n    \"revision\": \"622eddde39a65758daf94a77b30671a5\"\n  },\n  {\n    \"url\": \"751_details.html\",\n    \"revision\": \"7fad1b94b206028bc4b96b3338b1b356\"\n  },\n  {\n    \"url\": \"758_details.html\",\n    \"revision\": \"abc4ec9041a94c336741173f5afbf08b\"\n  },\n  {\n    \"url\": \"760_BSMDT_final.html\",\n    \"revision\": \"9d4bd89e2ce9b26546fa85932aa279ae\"\n  },\n  {\n    \"url\": \"760_BSMDT_new.html\",\n    \"revision\": \"cd0d7f217b67336f3814a1de406533f9\"\n  },\n  {\n    \"url\": \"760_BSMDT.html\",\n    \"revision\": \"d1f4497401182e0a2c124ae2bdf81abf\"\n  },\n  {\n    \"url\": \"760_details.html\",\n    \"revision\": \"0c200d4e866abaf4c098ffe45457c8fa\"\n  },\n  {\n    \"url\": \"764_BSMDT_final.html\",\n    \"revision\": \"d24fe262cc2578a11ad6aef64ed506dc\"\n  },\n  {\n    \"url\": \"764_BSMDT_new.html\",\n    \"revision\": \"53915929d8452d03b3c58c6a7e7f5ff0\"\n  },\n  {\n    \"url\": \"764_BSMDT_Original.html\",\n    \"revision\": \"25137ca97762a4a9fa15cda0069c81c5\"\n  },\n  {\n    \"url\": \"764_BSMDT.html\",\n    \"revision\": \"70f7894e63bd19e08fef95d2f6592ca4\"\n  },\n  {\n    \"url\": \"764_BSMDT1K.html\",\n    \"revision\": \"e254ffcbe24508537a5be5c760e000ec\"\n  },\n  {\n    \"url\": \"764_BSMDT2K.html\",\n    \"revision\": \"b4c6e53190d950598a17cee90b834431\"\n  },\n  {\n    \"url\": \"764_details.html\",\n    \"revision\": \"34eeed2f7b3e87b11e48b4ae06e2e854\"\n  },\n  {\n    \"url\": \"764_final.html\",\n    \"revision\": \"a2c7170b73b0bdd7d5d0d6d7968dc674\"\n  },\n  {\n    \"url\": \"764_final1.html\",\n    \"revision\": \"96bc54b29e26a6a5e783021e98fde685\"\n  },\n  {\n    \"url\": \"768_BSMDT_final.html\",\n    \"revision\": \"0160a28dbec848439ed534c30385e739\"\n  },\n  {\n    \"url\": \"768_BSMDT_new.html\",\n    \"revision\": \"ffae4375e7bd48cbb0184e413ad2396e\"\n  },\n  {\n    \"url\": \"768_BSMDT.html\",\n    \"revision\": \"7207719f825c2029f93e9b19a369009e\"\n  },\n  {\n    \"url\": \"768_details.html\",\n    \"revision\": \"f3d490028ab193ce224f88985e44cfd0\"\n  },\n  {\n    \"url\": \"768_final.html\",\n    \"revision\": \"ffae4375e7bd48cbb0184e413ad2396e\"\n  },\n  {\n    \"url\": \"771_allinone.html\",\n    \"revision\": \"070c9b355b6083e44cb54f51399769b5\"\n  },\n  {\n    \"url\": \"771_BSMDT_final.html\",\n    \"revision\": \"d6e18c2cfe15018f44399494c7defc5b\"\n  },\n  {\n    \"url\": \"771_BSMDT.html\",\n    \"revision\": \"9ee6e080ae1d9a18a37fd47585c86609\"\n  },\n  {\n    \"url\": \"771_details.html\",\n    \"revision\": \"a0bee3706379c9891d71a7031448e8af\"\n  },\n  {\n    \"url\": \"771_final.html\",\n    \"revision\": \"a44be59fdcb3ce8ca8d4a85240087208\"\n  },\n  {\n    \"url\": \"771_new.html\",\n    \"revision\": \"6e986470635a1623ec801a48bd98a798\"\n  },\n  {\n    \"url\": \"774_567.png\",\n    \"revision\": \"234f5d9672ab34dfc820968a02904590\"\n  },\n  {\n    \"url\": \"774_BSMDT.html\",\n    \"revision\": \"f216761131d80dcaff3e699c4aa72a40\"\n  },\n  {\n    \"url\": \"774_details.html\",\n    \"revision\": \"fafe9a52d0cc6c0856c80c49e7822dfa\"\n  },\n  {\n    \"url\": \"857_BSMDT.html\",\n    \"revision\": \"21943b88230fbf9b67e74d64a305b280\"\n  },\n  {\n    \"url\": \"857_BSMDT1K.html\",\n    \"revision\": \"3328fb2d6d33a938bea02ca9cb0b44ce\"\n  },\n  {\n    \"url\": \"857_BSMDT2K.html\",\n    \"revision\": \"3ab365978e364c66b31a6e00c30d0f35\"\n  },\n  {\n    \"url\": \"857_details.html\",\n    \"revision\": \"c321cb93ba0b17cddd0ab50764a8bb21\"\n  },\n  {\n    \"url\": \"857_trialnew.html\",\n    \"revision\": \"4bd63ab013decc271e997c0f00ef49c0\"\n  },\n  {\n    \"url\": \"857calculator.html\",\n    \"revision\": \"bd2e276ab27f176b98d5d1e4f809f7b8\"\n  },\n  {\n    \"url\": \"859_BSMDT.html\",\n    \"revision\": \"9486ba2dbf0f25e3624c977101addb1d\"\n  },\n  {\n    \"url\": \"859_BSMDT1K.html\",\n    \"revision\": \"32ca660e3b45a93b440a2a4723f48d0f\"\n  },\n  {\n    \"url\": \"859_BSMDT2K.html\",\n    \"revision\": \"32ca660e3b45a93b440a2a4723f48d0f\"\n  },\n  {\n    \"url\": \"859_details.html\",\n    \"revision\": \"362a44b87177bbc7a34c9069e6ffb2cd\"\n  },\n  {\n    \"url\": \"862_BSMDT.html\",\n    \"revision\": \"02dbe2fcc31210b3b6c5e1d31113c9ad\"\n  },\n  {\n    \"url\": \"862_BSMDT1000K.html\",\n    \"revision\": \"0ac48e133f127e40060ef41187ae61ac\"\n  },\n  {\n    \"url\": \"862_BSMDT1K.html\",\n    \"revision\": \"5ce3524a41be7f78c5664622ddd325d1\"\n  },\n  {\n    \"url\": \"862_details.html\",\n    \"revision\": \"c9c57dcb661dd79cafb41af61bc427e8\"\n  },\n  {\n    \"url\": \"862-BSMDT2K.html\",\n    \"revision\": \"42655818c3cebf347645b8dc48a5eb58\"\n  },\n  {\n    \"url\": \"875_BSMDT.html\",\n    \"revision\": \"7b8e344d343b678abb210e51df14ccb3\"\n  },\n  {\n    \"url\": \"875_BSMDT1K.html\",\n    \"revision\": \"ede52d28c3c88d909f94199cf0be992e\"\n  },\n  {\n    \"url\": \"875_BSMDT2K.html\",\n    \"revision\": \"1574a609297a2cbf10dcbe6791b5e195\"\n  },\n  {\n    \"url\": \"875_calc2.html\",\n    \"revision\": \"1562dd2b3ab0aa2f8ba4fe5fbda199e4\"\n  },\n  {\n    \"url\": \"875_details.html\",\n    \"revision\": \"83134868fcd33575ef80b5f9288d3347\"\n  },\n  {\n    \"url\": \"875_M_S_Level_regular.html\",\n    \"revision\": \"2b9e9f9f4b71a6837c8c4ac95a791cf6\"\n  },\n  {\n    \"url\": \"875_trial.html\",\n    \"revision\": \"468b4704085a31cda6ada7b466f8aec6\"\n  },\n  {\n    \"url\": \"877_details.html\",\n    \"revision\": \"6120b0a340adcbb571074e50f9cd0b45\"\n  },\n  {\n    \"url\": \"879_BSMDT.html\",\n    \"revision\": \"0e375e53420e81fa16cc2b030664b491\"\n  },\n  {\n    \"url\": \"879_BSMDT5K.html\",\n    \"revision\": \"b9b2b54b6b3303ede90427192441365e\"\n  },\n  {\n    \"url\": \"879_calc2.html\",\n    \"revision\": \"6a5c70bd391015540d128a7b6588a354\"\n  },\n  {\n    \"url\": \"879_details.html\",\n    \"revision\": \"6f27a47bdca4892d1d6e328c42d0333e\"\n  },\n  {\n    \"url\": \"879_trial.html\",\n    \"revision\": \"66867d7b4d01d03568d6c72996c529dc\"\n  },\n  {\n    \"url\": \"911_BSMDT.html\",\n    \"revision\": \"6991fdd4495aaf8f1f08dc1dfae2c699\"\n  },\n  {\n    \"url\": \"911_calc.html\",\n    \"revision\": \"ffb44ceb100566f49c5813046a29d4ac\"\n  },\n  {\n    \"url\": \"911_calc2.html\",\n    \"revision\": \"ffb44ceb100566f49c5813046a29d4ac\"\n  },\n  {\n    \"url\": \"912_BSMDT.html\",\n    \"revision\": \"561272166c290fbf08401a05e3a78fa3\"\n  },\n  {\n    \"url\": \"912_calc1.html\",\n    \"revision\": \"561272166c290fbf08401a05e3a78fa3\"\n  },\n  {\n    \"url\": \"915.html\",\n    \"revision\": \"e8e6860f21226202348b4f2f4870727e\"\n  },\n  {\n    \"url\": \"955_BSMDT_Increase_NS_F.html\",\n    \"revision\": \"56e7b4d1271ba563ad09e59edcc874b4\"\n  },\n  {\n    \"url\": \"955_BSMDT_Increase_NS_M.html\",\n    \"revision\": \"f0609a1763926ded587a8ffd3cf171cc\"\n  },\n  {\n    \"url\": \"955_BSMDT_Increase_S_F.html\",\n    \"revision\": \"dc88616a02a3fbddece8c6a2f808cc25\"\n  },\n  {\n    \"url\": \"955_BSMDT_Increase_S_M.html\",\n    \"revision\": \"def23333536fb7e604f74021571ced29\"\n  },\n  {\n    \"url\": \"955_BSMDT_Level_NS_F.html\",\n    \"revision\": \"bef95bae53b97c327cc6c5a5640a4715\"\n  },\n  {\n    \"url\": \"955_BSMDT_Level_NS_M.html\",\n    \"revision\": \"89b0e0a489b2c89d320ea7682b31c459\"\n  },\n  {\n    \"url\": \"955_BSMDT_Level_S_F.html\",\n    \"revision\": \"8fede3246f27de1ffdf1b227644b6669\"\n  },\n  {\n    \"url\": \"955_BSMDT_Level_S_M.html\",\n    \"revision\": \"d4e003aa808d17b5db5cc2094727b4a8\"\n  },\n  {\n    \"url\": \"955_BSMDT.html\",\n    \"revision\": \"b5c520f080fee5b4f7ad83aea64f96e7\"\n  },\n  {\n    \"url\": \"955_details.html\",\n    \"revision\": \"3038cad9414066411c24bea7d61af5c7\"\n  },\n  {\n    \"url\": \"about.html\",\n    \"revision\": \"5433075a02549f240f8b3aafa400691c\"\n  },\n  {\n    \"url\": \"acko.html\",\n    \"revision\": \"441117ebbad4b6586a5e9214d949693b\"\n  },\n  {\n    \"url\": \"ADDB/addb 912-c2.json\",\n    \"revision\": \"4bbec93f617bcb44d108362145b853f7\"\n  },\n  {\n    \"url\": \"ADDB/addb 912.json\",\n    \"revision\": \"16c95a19ced9dc87915f63693ec9edce\"\n  },\n  {\n    \"url\": \"ADDB/addb_745_old.json\",\n    \"revision\": \"ea03418cb882d55d0d3da148718fb7f7\"\n  },\n  {\n    \"url\": \"ADDB/addb717.json\",\n    \"revision\": \"27f5f994b28b557de451c3f32ee766bd\"\n  },\n  {\n    \"url\": \"ADDB/addb733.json\",\n    \"revision\": \"a951d4297c67b76d863f07e7d453aa4e\"\n  },\n  {\n    \"url\": \"ADDB/addb736.json\",\n    \"revision\": \"614148cb1875902e33cdfd3d19798b76\"\n  },\n  {\n    \"url\": \"ADDB/addb760.json\",\n    \"revision\": \"f790f5581e470ae6c6c145cf062bb415\"\n  },\n  {\n    \"url\": \"ADDB/addb771.json\",\n    \"revision\": \"ec0fefe2d38958cb405425e079c5eff6\"\n  },\n  {\n    \"url\": \"adityabirla.html\",\n    \"revision\": \"7c60b935cff8d76540a5647acca0187b\"\n  },\n  {\n    \"url\": \"aegasfederal.html\",\n    \"revision\": \"62ada4487c6463498191e30414c4c407\"\n  },\n  {\n    \"url\": \"agents_commission.html\",\n    \"revision\": \"c3ea5b1eb6f6ccc7b62498003af52981\"\n  },\n  {\n    \"url\": \"agents_commission2K.html\",\n    \"revision\": \"3b955810e929ab65bc38bd00485954f4\"\n  },\n  {\n    \"url\": \"agents_corner.html\",\n    \"revision\": \"8c5f40fbf9b709e9346a4565f8e580a0\"\n  },\n  {\n    \"url\": \"agents_data_final1.html\",\n    \"revision\": \"d456bd189b81cff11eba57fbb71a7000\"\n  },\n  {\n    \"url\": \"agents_data.html\",\n    \"revision\": \"0b013a1be28e12b9c79bb0b6ae201522\"\n  },\n  {\n    \"url\": \"agents_data2.html\",\n    \"revision\": \"8fb7ed901365418d3c29e51d8aee252a\"\n  },\n  {\n    \"url\": \"agents_data2K.html\",\n    \"revision\": \"af44443decea5639b2c82dbe61eb7f75\"\n  },\n  {\n    \"url\": \"agents_module.html\",\n    \"revision\": \"af961d38746ec151f1608c09d1f57190\"\n  },\n  {\n    \"url\": \"agents_module1.html\",\n    \"revision\": \"869771126b2aacf844e73751a17963ad\"\n  },\n  {\n    \"url\": \"AllInOne_addb_tr_pwb.html\",\n    \"revision\": \"3e7108e4516ea0a2fbb7737e2d008677\"\n  },\n  {\n    \"url\": \"annuity.html\",\n    \"revision\": \"5c8b9ba948803333be2bac231b2ce095\"\n  },\n  {\n    \"url\": \"annuity1.html\",\n    \"revision\": \"3454bf66d7fc4327031836b5546442be\"\n  },\n  {\n    \"url\": \"annuity2.html\",\n    \"revision\": \"61fc2f3ef31ef20dd47c90081c45e47c\"\n  },\n  {\n    \"url\": \"automatic_fetch.html\",\n    \"revision\": \"5591cc76448611b80a4364c6b60e3160\"\n  },\n  {\n    \"url\": \"aviva.html\",\n    \"revision\": \"bdd116c258318403f4570c2e877269eb\"\n  },\n  {\n    \"url\": \"axismax.html\",\n    \"revision\": \"a15dd712f1e3323aef24f062cf2d8990\"\n  },\n  {\n    \"url\": \"bajajallianz.html\",\n    \"revision\": \"a02da0002a6ca045020fcaf5b29728b4\"\n  },\n  {\n    \"url\": \"bandhan.html\",\n    \"revision\": \"be77d16684e57ab0f444c2a562147c76\"\n  },\n  {\n    \"url\": \"basic_concepts.html\",\n    \"revision\": \"28c9f964cf6f0703d916e51329bb2ddb\"\n  },\n  {\n    \"url\": \"bestplan.html\",\n    \"revision\": \"62fe53a6ff499042143e1144baa62ec8\"\n  },\n  {\n    \"url\": \"bhartiaxa.html\",\n    \"revision\": \"abce532bc74a2fff6e123f85e6fee984\"\n  },\n  {\n    \"url\": \"branches.html\",\n    \"revision\": \"82c8c2a5a91559144454377b04f0ec3c\"\n  },\n  {\n    \"url\": \"branches2K.html\",\n    \"revision\": \"0a3058da6c6212af5d3343317f99bf3f\"\n  },\n  {\n    \"url\": \"canarahsbc.html\",\n    \"revision\": \"e203a2a896980e4723fb23cb78c93e9b\"\n  },\n  {\n    \"url\": \"commissioncalculator.html\",\n    \"revision\": \"ae1caa34508be932b48af9a85191cbb9\"\n  },\n  {\n    \"url\": \"commissioncalculator1.html\",\n    \"revision\": \"b47d7d24e04c46e0b62b0a764183e926\"\n  },\n  {\n    \"url\": \"commissionenquiry.html\",\n    \"revision\": \"9604f587ea8b002c6a2bb87c7f7566b0\"\n  },\n  {\n    \"url\": \"comparebygroup.html\",\n    \"revision\": \"76aae2d326ab3c5c5a70ffc11f63cf9d\"\n  },\n  {\n    \"url\": \"comparebygroup2K.html\",\n    \"revision\": \"498c13b04f2022b43aa030a583bcc57f\"\n  },\n  {\n    \"url\": \"competition1.html\",\n    \"revision\": \"ab56df61f2a4415e48f12a8e156b8ca2\"\n  },\n  {\n    \"url\": \"competitors.html\",\n    \"revision\": \"791c2bd6b9adf22c23478373817b0adb\"\n  },\n  {\n    \"url\": \"contact.html\",\n    \"revision\": \"b0b9e6788ced38de9fdf646a10400d47\"\n  },\n  {\n    \"url\": \"contact2K.html\",\n    \"revision\": \"25b20bd3f0aa2688909b820c53ec3ebd\"\n  },\n  {\n    \"url\": \"creditaccess.html\",\n    \"revision\": \"554a54615746bd0d0ec6954655311ab1\"\n  },\n  {\n    \"url\": \"customer_corner.html\",\n    \"revision\": \"dd0dbddd78278786c1fc2b6e89827ab4\"\n  },\n  {\n    \"url\": \"customer_corner2K.html\",\n    \"revision\": \"5591cc76448611b80a4364c6b60e3160\"\n  },\n  {\n    \"url\": \"customer_data.html\",\n    \"revision\": \"34d7fccef5352a446b71564220666365\"\n  },\n  {\n    \"url\": \"customer_data2K.html\",\n    \"revision\": \"cc63f0ecd0b43c00db6825920c99615a\"\n  },\n  {\n    \"url\": \"daiichi.html\",\n    \"revision\": \"50a4707e6b1953ca672c701c95655a4c\"\n  },\n  {\n    \"url\": \"death_claim_process.html\",\n    \"revision\": \"88a3213d02c6f6fb4b38abe51b30245f\"\n  },\n  {\n    \"url\": \"deathclaim.html\",\n    \"revision\": \"f71d851faaa7d2bbbfb9ab1af8fc9212\"\n  },\n  {\n    \"url\": \"disclaimer.html\",\n    \"revision\": \"b21984c6b808aa4cc572e3918bc19263\"\n  },\n  {\n    \"url\": \"duplicate_process.html\",\n    \"revision\": \"db8ba1af432912be7a0239c2a94f5b56\"\n  },\n  {\n    \"url\": \"edelweiss.html\",\n    \"revision\": \"94d9ffecc0705a1d7f64977ce4b642de\"\n  },\n  {\n    \"url\": \"endowment.html\",\n    \"revision\": \"bf8a220be4d6ececdf3eaa6f759a1d37\"\n  },\n  {\n    \"url\": \"error.html\",\n    \"revision\": \"a1d54dae09d0bc5a53a93fcc36356db3\"\n  },\n  {\n    \"url\": \"fatca_process.html\",\n    \"revision\": \"f769ed4fe7d27a9e46c873fc739eeddc\"\n  },\n  {\n    \"url\": \"favouriteplan.html\",\n    \"revision\": \"46b4b44bd5ed8996081a90e73c838e6a\"\n  },\n  {\n    \"url\": \"featureschatGpt.html\",\n    \"revision\": \"a49f22d12a1b4b937f5458f0419a9005\"\n  },\n  {\n    \"url\": \"FINAL CALCULATOR/714_finalcalculator.html\",\n    \"revision\": \"97ffd3101461d1206c2e9a60621facc7\"\n  },\n  {\n    \"url\": \"FINAL CALCULATOR/715_finalcalculator.html\",\n    \"revision\": \"4f9338a69e811cbe3c3452e805755e71\"\n  },\n  {\n    \"url\": \"FINAL CALCULATOR/720_finalcalculator.html\",\n    \"revision\": \"e2cca4786008ac2c85ca41f7465c1012\"\n  },\n  {\n    \"url\": \"FINAL CALCULATOR/721_finalcalculator.html\",\n    \"revision\": \"adf644e9cb05d2d73f6a399e8086a7ff\"\n  },\n  {\n    \"url\": \"final/714_final.html\",\n    \"revision\": \"d80e35af751d2f908ce8746d084dcb58\"\n  },\n  {\n    \"url\": \"final/715_final.html\",\n    \"revision\": \"211409af392a974741de8ee65c4e93fc\"\n  },\n  {\n    \"url\": \"final/721_allinone.html\",\n    \"revision\": \"16243c33919c8521fd8686c008fa8e4f\"\n  },\n  {\n    \"url\": \"final/733_final.html\",\n    \"revision\": \"d7db1e7ba25c877fe5309d3c3d59e756\"\n  },\n  {\n    \"url\": \"final/AllInOne_addb_tr.html\",\n    \"revision\": \"9abc7aec7925b622fa14d07a718a3a2c\"\n  },\n  {\n    \"url\": \"forms.html\",\n    \"revision\": \"91c1334c6312bd84bf71f104ad334e3a\"\n  },\n  {\n    \"url\": \"futuregenerali.html\",\n    \"revision\": \"7302aeafd32a708d41f2b2f25d13593f\"\n  },\n  {\n    \"url\": \"godigit.html\",\n    \"revision\": \"fe1053156fcd13abc6620f31b0078c58\"\n  },\n  {\n    \"url\": \"GSV/714_b.json\",\n    \"revision\": \"7a9e521a61c05f5ec71c10ba12a416fb\"\n  },\n  {\n    \"url\": \"GSV/714.json\",\n    \"revision\": \"5571ddba78299043797f2230b3d08c73\"\n  },\n  {\n    \"url\": \"GSV/715_b.json\",\n    \"revision\": \"b29aff187132b7c74c20da28beca0389\"\n  },\n  {\n    \"url\": \"GSV/715.json\",\n    \"revision\": \"2723945c150a60ab08d3b6537b28e9fb\"\n  },\n  {\n    \"url\": \"GSV/717_b.json\",\n    \"revision\": \"f5da04ad1fd5dccbd1d6e26e07267650\"\n  },\n  {\n    \"url\": \"GSV/720_b.json\",\n    \"revision\": \"bb1613aa07b3c91f2ff8f7cdb096ee3e\"\n  },\n  {\n    \"url\": \"GSV/720.json\",\n    \"revision\": \"da13f03ce03a9bbba5baed2a0cf0ecab\"\n  },\n  {\n    \"url\": \"GSV/721_b.json\",\n    \"revision\": \"78515d584158610e6b7e3a525030cff1\"\n  },\n  {\n    \"url\": \"GSV/721.json\",\n    \"revision\": \"21ca2b3fec81362a2c62d9ade8e4f2f4\"\n  },\n  {\n    \"url\": \"GSV/732_b.json\",\n    \"revision\": \"a4645bbe61855ce547f2fef5d636f050\"\n  },\n  {\n    \"url\": \"GSV/732.json\",\n    \"revision\": \"e332dd5508f2d9352575588a30de4a3c\"\n  },\n  {\n    \"url\": \"GSV/733_b.json\",\n    \"revision\": \"a4645bbe61855ce547f2fef5d636f050\"\n  },\n  {\n    \"url\": \"GSV/733.json\",\n    \"revision\": \"4184b4fc662d3194b867da1477ec31bc\"\n  },\n  {\n    \"url\": \"GSV/734_b.json\",\n    \"revision\": \"51fb752fce6b880560550933e360a264\"\n  },\n  {\n    \"url\": \"GSV/734.json\",\n    \"revision\": \"49f099d25440be7d5b797cb00fe3baed\"\n  },\n  {\n    \"url\": \"GSV/736_b.json\",\n    \"revision\": \"083ef3fa685f95d8a0c1d1083f7afae3\"\n  },\n  {\n    \"url\": \"GSV/736.json\",\n    \"revision\": \"77385faa3506202bbd2d8e00873b38ca\"\n  },\n  {\n    \"url\": \"GSV/745_b.json\",\n    \"revision\": \"7c5b8ee32eab2b8ad421722f35c37f2f\"\n  },\n  {\n    \"url\": \"GSV/745.json\",\n    \"revision\": \"923447ad93cc1dd31e0e838f113532a1\"\n  },\n  {\n    \"url\": \"GSV/748_ga.json\",\n    \"revision\": \"0e4b0df5e90483ec5c64b15260e9ab10\"\n  },\n  {\n    \"url\": \"GSV/748.json\",\n    \"revision\": \"b7560809c142aa1d2c8ab2043ebdd724\"\n  },\n  {\n    \"url\": \"GSV/751.json\",\n    \"revision\": \"9be84c8754758ea73686be8eb7f217d1\"\n  },\n  {\n    \"url\": \"GSV/760_b.json\",\n    \"revision\": \"d00e22aa37d22796c84b412b3e1c82e1\"\n  },\n  {\n    \"url\": \"GSV/760.json\",\n    \"revision\": \"4eb7c1c5d1a2d49b06744e7ebce35552\"\n  },\n  {\n    \"url\": \"GSV/764_b.json\",\n    \"revision\": \"351750edf9cbb3c0b6bb667a033691eb\"\n  },\n  {\n    \"url\": \"GSV/764.json\",\n    \"revision\": \"a492e9216894e5f8d54b4370269c0ddf\"\n  },\n  {\n    \"url\": \"GSV/768.json\",\n    \"revision\": \"16ef0740c5776676db1343bea7f5cd55\"\n  },\n  {\n    \"url\": \"GSV/771_g.json\",\n    \"revision\": \"905c398731343b1ce351fc10469e80bf\"\n  },\n  {\n    \"url\": \"GSV/771.json\",\n    \"revision\": \"b104ea3b5c404fae33838697c8c5d2dc\"\n  },\n  {\n    \"url\": \"GSV/774_ga.json\",\n    \"revision\": \"8770e0f9415748365e5e03617e8f6df2\"\n  },\n  {\n    \"url\": \"GSV/774.json\",\n    \"revision\": \"3260251256855f5dc1d7cadf8832fcc2\"\n  },\n  {\n    \"url\": \"GSV/859_ga.json\",\n    \"revision\": \"2880db6960845fe28a6fe14257410859\"\n  },\n  {\n    \"url\": \"GSV/911_b.json\",\n    \"revision\": \"3fe267230d99e3004714e0f62f1eee16\"\n  },\n  {\n    \"url\": \"GSV/912_b.json\",\n    \"revision\": \"28c549a9a85804d7c421fe0f22788159\"\n  },\n  {\n    \"url\": \"GSV/912.json\",\n    \"revision\": \"2827df14ce8f7bad4b3082b32d3ea2a1\"\n  },\n  {\n    \"url\": \"hdfc.html\",\n    \"revision\": \"0794db9d6675e2f281daa3caf09ad81b\"\n  },\n  {\n    \"url\": \"icici.html\",\n    \"revision\": \"554a7e9c4316e177055678a1a99b77eb\"\n  },\n  {\n    \"url\": \"icons/agentsCorner.png\",\n    \"revision\": \"807458f892d20b02ea20b0c505afb53c\"\n  },\n  {\n    \"url\": \"icons/agentsData.png\",\n    \"revision\": \"7b313517553c875d5f4632d1eb53707e\"\n  },\n  {\n    \"url\": \"icons/agentsModule.png\",\n    \"revision\": \"208e1f4a8d572f1e41caa7ac49c10baa\"\n  },\n  {\n    \"url\": \"icons/automaticFetch.png\",\n    \"revision\": \"746336eb0cd054a9b7e3167c38a96679\"\n  },\n  {\n    \"url\": \"icons/branchLocator.png\",\n    \"revision\": \"1e894045c272d342fb621c3ce3914b2b\"\n  },\n  {\n    \"url\": \"icons/business-man.png\",\n    \"revision\": \"7fd3797021fb2a931d9613e428b99738\"\n  },\n  {\n    \"url\": \"icons/calculator.png\",\n    \"revision\": \"b7fbf4dfccf5c97ea9460463517fcadb\"\n  },\n  {\n    \"url\": \"icons/commission.png\",\n    \"revision\": \"c3da0edc2fe64a54305e65d5e8d14621\"\n  },\n  {\n    \"url\": \"icons/customerData.png\",\n    \"revision\": \"0bb394390d2ac79b02f2e529dd52256c\"\n  },\n  {\n    \"url\": \"icons/customersCorner.png\",\n    \"revision\": \"e3f7305f67aafd106c42824e38c79603\"\n  },\n  {\n    \"url\": \"icons/forms.png\",\n    \"revision\": \"4826f5e0312dd9450d5cb4c72fce2873\"\n  },\n  {\n    \"url\": \"icons/glossary.png\",\n    \"revision\": \"60b094aa1fc782a343c4e81647d63b2c\"\n  },\n  {\n    \"url\": \"icons/IRR.png\",\n    \"revision\": \"29e6af0e6b6ff7167689fe82e0b73918\"\n  },\n  {\n    \"url\": \"icons/needs.png\",\n    \"revision\": \"50bf3e0c06e3e00438b68e26b6c506c0\"\n  },\n  {\n    \"url\": \"icons/planComparison.png\",\n    \"revision\": \"31d1a810de6614c34c679bb523a46d09\"\n  },\n  {\n    \"url\": \"icons/planFeatures.png\",\n    \"revision\": \"378af53c6610b38e3e11e96ba5f70dfa\"\n  },\n  {\n    \"url\": \"icons/process.png\",\n    \"revision\": \"b7fc738c058d7278cb9876ccbe5d42ac\"\n  },\n  {\n    \"url\": \"icons/prospectsCorner.png\",\n    \"revision\": \"95b522888049b698a0b9c3e18f7423a9\"\n  },\n  {\n    \"url\": \"images/icon_714.png\",\n    \"revision\": \"1e74e50497f2323cbf1362f4258da80a\"\n  },\n  {\n    \"url\": \"images/icon_715.png\",\n    \"revision\": \"0538db28e1320e97861e8c2dcadbf9c0\"\n  },\n  {\n    \"url\": \"images/icon_717.png\",\n    \"revision\": \"9f521c24c6180a919e492ae8c51ba109\"\n  },\n  {\n    \"url\": \"images/icon_720.png\",\n    \"revision\": \"91775f8b491885eb008ef0caf6530fee\"\n  },\n  {\n    \"url\": \"images/icon_721.png\",\n    \"revision\": \"45fa82fa6ddb9baa3a16b45d739e958e\"\n  },\n  {\n    \"url\": \"images/icon_732.png\",\n    \"revision\": \"8009e17f5285ec86d973748f986541df\"\n  },\n  {\n    \"url\": \"images/icon_733.png\",\n    \"revision\": \"33965cd32a35696baabd7b67a7f7a2ad\"\n  },\n  {\n    \"url\": \"images/icon_734.png\",\n    \"revision\": \"c30303cc901d7b2f73f8d03b4edee0e5\"\n  },\n  {\n    \"url\": \"images/icon_736.png\",\n    \"revision\": \"9ba6fb010112c114745875e3b2b0182c\"\n  },\n  {\n    \"url\": \"images/icon_745.png\",\n    \"revision\": \"0736a233e06b48b39a1a50de2dab228c\"\n  },\n  {\n    \"url\": \"images/icon_748.png\",\n    \"revision\": \"77f356ec24ca92009be301271cac1903\"\n  },\n  {\n    \"url\": \"images/icon_751.png\",\n    \"revision\": \"268826ae768cdcab0a0eec8ba5193b4b\"\n  },\n  {\n    \"url\": \"images/icon_758.png\",\n    \"revision\": \"603d999dac5648d5291816c0e2d70a0a\"\n  },\n  {\n    \"url\": \"images/icon_760.png\",\n    \"revision\": \"eb1cd0b371ed7b0bf37492a80323475e\"\n  },\n  {\n    \"url\": \"images/icon_764.png\",\n    \"revision\": \"4dd2269f3b3bfebf09110a71f527f639\"\n  },\n  {\n    \"url\": \"images/icon_768.png\",\n    \"revision\": \"dd615ab5d491a19606efbe0f52130cc9\"\n  },\n  {\n    \"url\": \"images/icon_771.png\",\n    \"revision\": \"0b3024828a169bc1890c5c6146fc20a3\"\n  },\n  {\n    \"url\": \"images/icon_774.png\",\n    \"revision\": \"117c8277fc395ba6b27fcd0d23509084\"\n  },\n  {\n    \"url\": \"images/icon_859.png\",\n    \"revision\": \"4eb64a32f6cfc90a0c2eb499577dd096\"\n  },\n  {\n    \"url\": \"images/icon_862.png\",\n    \"revision\": \"feea96a3b8b275ae38aafb61f6d51bac\"\n  },\n  {\n    \"url\": \"images/icon_875.png\",\n    \"revision\": \"9af6b2ffd2b4d529278fee429d5ed48f\"\n  },\n  {\n    \"url\": \"images/icon_877.png\",\n    \"revision\": \"25dc3dffb32816679006d0ee48e94bbd\"\n  },\n  {\n    \"url\": \"images/icon_879.png\",\n    \"revision\": \"b83f53971603979bbf036992de8c09f3\"\n  },\n  {\n    \"url\": \"images/icon_911.png\",\n    \"revision\": \"4e811fff1cb6dbb3b4aad9aa904d00e9\"\n  },\n  {\n    \"url\": \"images/icon_912.png\",\n    \"revision\": \"d69075520ddfe0c5b3e90f9414685072\"\n  },\n  {\n    \"url\": \"images/icon_955.png\",\n    \"revision\": \"c8d6fbf3fa6f605759bafbcc4a5466f0\"\n  },\n  {\n    \"url\": \"images/icon-192x192.png\",\n    \"revision\": \"d26143a55fb70d2996f40642dff1a32f\"\n  },\n  {\n    \"url\": \"images/icon-512x512.png\",\n    \"revision\": \"d2ed1c210ba12a69b4ca1462e1ac1c09\"\n  },\n  {\n    \"url\": \"index.html\",\n    \"revision\": \"b0c83427cdd7c937a3d5105106fd8c24\"\n  },\n  {\n    \"url\": \"indiafirst.html\",\n    \"revision\": \"4239187306963abe2d365ca3d63e5956\"\n  },\n  {\n    \"url\": \"irr_715.html\",\n    \"revision\": \"15a3da749e2c43b14b0f7b158391fc26\"\n  },\n  {\n    \"url\": \"irr_plans.html\",\n    \"revision\": \"46690b539c3b06dc963a52721cd8c1e9\"\n  },\n  {\n    \"url\": \"irr-715.html\",\n    \"revision\": \"356630601d477c2d384ed14b74533283\"\n  },\n  {\n    \"url\": \"irr.html\",\n    \"revision\": \"69345990b568d6247ab505af6a211798\"\n  },\n  {\n    \"url\": \"irrnew.html\",\n    \"revision\": \"1571dd78b5ae185992ef6010cd3d76e7\"\n  },\n  {\n    \"url\": \"j715.html\",\n    \"revision\": \"5c979c529f7855caad5bc390e5da9047\"\n  },\n  {\n    \"url\": \"jeevanAkshay.json\",\n    \"revision\": \"c9146643583d58ce39d51c2ada6ddbb7\"\n  },\n  {\n    \"url\": \"jeevanakshay1.json\",\n    \"revision\": \"7e302c35ba837a5484bcc9b90d25e731\"\n  },\n  {\n    \"url\": \"jeevananand.html\",\n    \"revision\": \"484f504145e41d3f307f43314f79a687\"\n  },\n  {\n    \"url\": \"jeevananand1.html\",\n    \"revision\": \"48602bc534d900c440171ed35080440c\"\n  },\n  {\n    \"url\": \"kotak.html\",\n    \"revision\": \"fff83b8a1d062f06b1456d0f38d05fbc\"\n  },\n  {\n    \"url\": \"lic_process.html\",\n    \"revision\": \"823e63ce9a5a171a681eddc2292eaf59\"\n  },\n  {\n    \"url\": \"lic_process1K.html\",\n    \"revision\": \"06f194db7fc26eb23a9b6a3600c024c7\"\n  },\n  {\n    \"url\": \"lic_theory.html\",\n    \"revision\": \"3dcac57b02bfb2f1f97f8731e1d775f4\"\n  },\n  {\n    \"url\": \"lic-black.png\",\n    \"revision\": \"16121eb1354a0b5f5c2cb28a806ab7ee\"\n  },\n  {\n    \"url\": \"lic-competitors.html\",\n    \"revision\": \"b96e9ae996910f259e97523c5f920bdb\"\n  },\n  {\n    \"url\": \"LIC.jpg\",\n    \"revision\": \"213d198f82d871b7d0f48be38925e3cb\"\n  },\n  {\n    \"url\": \"lic1.png\",\n    \"revision\": \"a19c2ed323e087901e31fe3d49a35eda\"\n  },\n  {\n    \"url\": \"lic3.png\",\n    \"revision\": \"f304739c4839a660bc8f29bf32d15031\"\n  },\n  {\n    \"url\": \"liccalculator.html\",\n    \"revision\": \"9210bb19d54a90aafadea50bb1307b6a\"\n  },\n  {\n    \"url\": \"liccalculator2.html\",\n    \"revision\": \"2e7afb7297d5d44755a8f298e54b65bd\"\n  },\n  {\n    \"url\": \"licimage.jpg\",\n    \"revision\": \"44929c83c110eff7537b0f6a78538c50\"\n  },\n  {\n    \"url\": \"licnew.jpg\",\n    \"revision\": \"e15b01cbb35ccd05ee8d101033908bc9\"\n  },\n  {\n    \"url\": \"loan_form_display.html\",\n    \"revision\": \"38fa365c27a91c4f407f501e7630c78b\"\n  },\n  {\n    \"url\": \"loan_process.html\",\n    \"revision\": \"baf2953dacf03fa0999181afb5ea61f8\"\n  },\n  {\n    \"url\": \"loan.html\",\n    \"revision\": \"363daec9d59d9ae00e4a0f7bb118ad06\"\n  },\n  {\n    \"url\": \"main (1).html\",\n    \"revision\": \"51f8361338f81066c8f6f78058991a44\"\n  },\n  {\n    \"url\": \"main_final.html\",\n    \"revision\": \"d52d84ea8d3aa802845d1afd759262ac\"\n  },\n  {\n    \"url\": \"main_modified.html\",\n    \"revision\": \"b22b24919647cbd4252d1919c63a43b4\"\n  },\n  {\n    \"url\": \"main_old_design.html\",\n    \"revision\": \"51f8361338f81066c8f6f78058991a44\"\n  },\n  {\n    \"url\": \"main.html\",\n    \"revision\": \"c65641b50befe066f3b412035744601a\"\n  },\n  {\n    \"url\": \"main10K.html\",\n    \"revision\": \"d094cf78fb58c99815bcdea2002fec49\"\n  },\n  {\n    \"url\": \"main11K.html\",\n    \"revision\": \"aeec426e0674d73370c965b7b5f33f48\"\n  },\n  {\n    \"url\": \"main1K.html\",\n    \"revision\": \"11f58ad8e3e9654ccb7c6afb717a528b\"\n  },\n  {\n    \"url\": \"main5K.html\",\n    \"revision\": \"782d60262276b4b4152b2208227aac73\"\n  },\n  {\n    \"url\": \"main6K.html\",\n    \"revision\": \"da6b0e0a76c2fc2091965f02ea89d6b8\"\n  },\n  {\n    \"url\": \"mainBefore.html\",\n    \"revision\": \"9992e1d0588297a4398935b24a00e399\"\n  },\n  {\n    \"url\": \"mainmarquee.html\",\n    \"revision\": \"b9fc325f30d59fab928ea9bec3102777\"\n  },\n  {\n    \"url\": \"manifest.json\",\n    \"revision\": \"f3439ecbe977a7221a0f8f50939d0f5a\"\n  },\n  {\n    \"url\": \"maturity_715.html\",\n    \"revision\": \"6dae40eb71d87890df1abec8caaaf9f2\"\n  },\n  {\n    \"url\": \"maturity_process.html\",\n    \"revision\": \"71c6ff5e266c7bfae9b65b476df25df1\"\n  },\n  {\n    \"url\": \"maturity.html\",\n    \"revision\": \"06a6433b29fd25b135a5251f741457d4\"\n  },\n  {\n    \"url\": \"maturity/maturityindex.html\",\n    \"revision\": \"27bfd8f72ea8c4241f3befb0d997079a\"\n  },\n  {\n    \"url\": \"maturity/script.js\",\n    \"revision\": \"36e93a01bf51ed601beacbc71cb46b18\"\n  },\n  {\n    \"url\": \"maturity/style.css\",\n    \"revision\": \"ca870fc2eeb34f9f943324b7daae7f6c\"\n  },\n  {\n    \"url\": \"maturity1_2.html\",\n    \"revision\": \"3d46d9c9b0a743ab76faca225cd25ff0\"\n  },\n  {\n    \"url\": \"maturity1_4.html\",\n    \"revision\": \"d529a4df8407f5438d4e92af221caa53\"\n  },\n  {\n    \"url\": \"maturity1.html\",\n    \"revision\": \"ac990fe2efa7c775773a565a28c76ae9\"\n  },\n  {\n    \"url\": \"maturitycalculator.html\",\n    \"revision\": \"22d13bb7015deed3e32040eb80d214ea\"\n  },\n  {\n    \"url\": \"maturityfinal.html\",\n    \"revision\": \"edbe5bc4b0a3d21db341072774b2acd0\"\n  },\n  {\n    \"url\": \"mybestplan.html\",\n    \"revision\": \"836e13885c5749e872cf17774796f23f\"\n  },\n  {\n    \"url\": \"needs_budget.html\",\n    \"revision\": \"278caa96871b7c55afc2f75a50c2135a\"\n  },\n  {\n    \"url\": \"needs_budget2K.html\",\n    \"revision\": \"e7211c0161920c9bf38e69a0280a7617\"\n  },\n  {\n    \"url\": \"neft_process.html\",\n    \"revision\": \"0c4d77cdc9c3c1e77b709625cf8e3a6e\"\n  },\n  {\n    \"url\": \"newjeevananand.html\",\n    \"revision\": \"e4c788f5da1cbb015027feae846fb6d8\"\n  },\n  {\n    \"url\": \"package-lock.json\",\n    \"revision\": \"db2afc52ecfa1d2867514913d0d74b73\"\n  },\n  {\n    \"url\": \"package.json\",\n    \"revision\": \"193316df4c60f19c4c6f77455886a6d6\"\n  },\n  {\n    \"url\": \"page1maturity.html\",\n    \"revision\": \"2701f34e9efa8e8c1855cd2faa69129c\"\n  },\n  {\n    \"url\": \"pages1-4.html\",\n    \"revision\": \"aa9560c6df30814dd60ff01585be394b\"\n  },\n  {\n    \"url\": \"pexels1.jpg\",\n    \"revision\": \"372aa382ce4e263b15416be38b49ed97\"\n  },\n  {\n    \"url\": \"pexels10.jpg\",\n    \"revision\": \"7745114eb710c82606e711f6c009d775\"\n  },\n  {\n    \"url\": \"pexels2.jpg\",\n    \"revision\": \"9c715f7e0bfaa963929dee6672a63e8c\"\n  },\n  {\n    \"url\": \"pexels3.jpg\",\n    \"revision\": \"6fa1f7bcb0d37001f5f7370540fcf04f\"\n  },\n  {\n    \"url\": \"pexels34.jpg\",\n    \"revision\": \"fb5a466bbe4dbb4420718d1edbe97158\"\n  },\n  {\n    \"url\": \"pexels35.jpg\",\n    \"revision\": \"0c79dcc3709204c82e8a841e8fcd80c4\"\n  },\n  {\n    \"url\": \"pexels36.jpg\",\n    \"revision\": \"a7641f16093fdd93efe139695c4646c2\"\n  },\n  {\n    \"url\": \"pexels38.jpg\",\n    \"revision\": \"06dfbdec2f154ee421916ca512ec2f0a\"\n  },\n  {\n    \"url\": \"pexels39.jpg\",\n    \"revision\": \"73c7313e34c056327424c198ac7ac226\"\n  },\n  {\n    \"url\": \"pexels40.jpg\",\n    \"revision\": \"98b66ed250cfd27e3f929bf0c2ab1369\"\n  },\n  {\n    \"url\": \"pexels43.jpg\",\n    \"revision\": \"5e385635df4e16adcbcf57cc6a98e47a\"\n  },\n  {\n    \"url\": \"pexels44.jpg\",\n    \"revision\": \"f7d18c6e427400c0cd6b7d7d3d53a6ce\"\n  },\n  {\n    \"url\": \"pexels45.jpg\",\n    \"revision\": \"95c0d0782ef0d2bd6af1a262f53d750b\"\n  },\n  {\n    \"url\": \"pexels46.jpg\",\n    \"revision\": \"4e05ceda1c3508badad98f535aa6d5ae\"\n  },\n  {\n    \"url\": \"pexels47.jpg\",\n    \"revision\": \"82a6f8d63de628a5fee4b8bac0b7d3da\"\n  },\n  {\n    \"url\": \"pexels48.jpg\",\n    \"revision\": \"529adee22d94016eca808cb0f998e670\"\n  },\n  {\n    \"url\": \"pexels49.jpg\",\n    \"revision\": \"7ea714a1af830ccd712a04659801109c\"\n  },\n  {\n    \"url\": \"pexels50.jpg\",\n    \"revision\": \"3461bc3dcbe239450e1518c1ed2e04d3\"\n  },\n  {\n    \"url\": \"pexels51.jpg\",\n    \"revision\": \"634dc4257ea5be895419d4c3026d6b48\"\n  },\n  {\n    \"url\": \"pexels6.jpg\",\n    \"revision\": \"85cb3eb4a09c70ae99dad992b074d1c6\"\n  },\n  {\n    \"url\": \"pexels8.jpg\",\n    \"revision\": \"2fdb4d5e1e9d6781541d72a874e09e5f\"\n  },\n  {\n    \"url\": \"pexels9.jpg\",\n    \"revision\": \"4e241144ea4ba178887a7d835a06e772\"\n  },\n  {\n    \"url\": \"plan_features.html\",\n    \"revision\": \"9283bcccdcca37ee8fe245926bc4c2b8\"\n  },\n  {\n    \"url\": \"plan_features1K.html\",\n    \"revision\": \"0cc71549b556d8706a299e745e6761b4\"\n  },\n  {\n    \"url\": \"plancombination.html\",\n    \"revision\": \"f8d50250e3b93d78e2d74eb84df79ad7\"\n  },\n  {\n    \"url\": \"plancombination2.html\",\n    \"revision\": \"81332e2da3dc1daaf2f6389321022b9c\"\n  },\n  {\n    \"url\": \"plancomparison.html\",\n    \"revision\": \"29119b8b6b4c900156f93c5489edf907\"\n  },\n  {\n    \"url\": \"plancomparison2.html\",\n    \"revision\": \"181f9d99a443cdc0f2ea133473442099\"\n  },\n  {\n    \"url\": \"plancomparison2K.html\",\n    \"revision\": \"2bc755b5f2065341ea5301941d7fdc53\"\n  },\n  {\n    \"url\": \"plancomparison3.html\",\n    \"revision\": \"741eaa7cd3b19f03c2c73b00b33e31e8\"\n  },\n  {\n    \"url\": \"plancomparison4K.html\",\n    \"revision\": \"09a967c25868719e12f01c5d0883992c\"\n  },\n  {\n    \"url\": \"plancomparison5K.html\",\n    \"revision\": \"09a967c25868719e12f01c5d0883992c\"\n  },\n  {\n    \"url\": \"plancomparison6K.html\",\n    \"revision\": \"ce5aba15856346b429b2dca1734ad8cb\"\n  },\n  {\n    \"url\": \"planscomparison3K.html\",\n    \"revision\": \"b211608019cd807149294b80c8138d3b\"\n  },\n  {\n    \"url\": \"planscomparison7K.html\",\n    \"revision\": \"90bd28d957fc539cb2e3638ec10f555b\"\n  },\n  {\n    \"url\": \"pnbmetlife.html\",\n    \"revision\": \"96580909df93385ae732cd1b94f8fe07\"\n  },\n  {\n    \"url\": \"post_verification.html\",\n    \"revision\": \"040d389da8b0635829f81197670dc689\"\n  },\n  {\n    \"url\": \"pramerica.html\",\n    \"revision\": \"3a863a828a79841e1257657086ddd0a2\"\n  },\n  {\n    \"url\": \"premium_page.html\",\n    \"revision\": \"6380aa760edf2dd6c5a1a1e9cd8823a5\"\n  },\n  {\n    \"url\": \"privacy_policy.html\",\n    \"revision\": \"ff2a0feac034c498c71781e2780b08c4\"\n  },\n  {\n    \"url\": \"prospect_corner.html\",\n    \"revision\": \"e1c13f63e65c6ed42b6995198ce458e3\"\n  },\n  {\n    \"url\": \"prospects.html\",\n    \"revision\": \"5f9a75cf251b35995487e664b8bb53ae\"\n  },\n  {\n    \"url\": \"prospectscorner.html\",\n    \"revision\": \"ce36e61481bf78f8a3e590848d307855\"\n  },\n  {\n    \"url\": \"prospectscorner1.html\",\n    \"revision\": \"3c2d52c286233ce617aa8f7c6d6bf65d\"\n  },\n  {\n    \"url\": \"PWB/714pwb.json\",\n    \"revision\": \"61a5b1ec8d9b496b446a79f21961d364\"\n  },\n  {\n    \"url\": \"PWB/732pwb.json\",\n    \"revision\": \"09e708e25b5ca7d09cc5dad3f8e5f868\"\n  },\n  {\n    \"url\": \"PWB/734pwb.json\",\n    \"revision\": \"74d6aa12c20e075575efcbf45de6d028\"\n  },\n  {\n    \"url\": \"PWB/736pwb.json\",\n    \"revision\": \"9651f918a2d8e1ed3e57af785657290c\"\n  },\n  {\n    \"url\": \"PWB/745pwb.json\",\n    \"revision\": \"1e1f72610b4acb383a7b1cd722b6e73e\"\n  },\n  {\n    \"url\": \"PWB/748pwb.json\",\n    \"revision\": \"d57c8b480534ee07cd7d23667ffd361e\"\n  },\n  {\n    \"url\": \"PWB/760pwb.json\",\n    \"revision\": \"3a462d7b736ede820e4c0f945da0bfaf\"\n  },\n  {\n    \"url\": \"PWB/764pwb.json\",\n    \"revision\": \"0a35a1fd996b23037410ec8eb60e91c9\"\n  },\n  {\n    \"url\": \"PWB/768pwb.json\",\n    \"revision\": \"da8b381411f7611bc7e6c96d658ae35e\"\n  },\n  {\n    \"url\": \"PWB/771.json\",\n    \"revision\": \"9651f918a2d8e1ed3e57af785657290c\"\n  },\n  {\n    \"url\": \"reliancenippon.html\",\n    \"revision\": \"7f5015a55346f6e04a6d66d7a224b84c\"\n  },\n  {\n    \"url\": \"report_calculator.html\",\n    \"revision\": \"83710f450499890862c1d98d885556a6\"\n  },\n  {\n    \"url\": \"reset.html\",\n    \"revision\": \"18a18e88d6da2b6524ff596df07d1431\"\n  },\n  {\n    \"url\": \"revival_715.html\",\n    \"revision\": \"8d01211d2da2e8b0f4d5284c28c26112\"\n  },\n  {\n    \"url\": \"revival_process.html\",\n    \"revision\": \"756a6d81a0ceffb9ab2c3f0d8b303c51\"\n  },\n  {\n    \"url\": \"revival/revivalindex.html\",\n    \"revision\": \"227b5481c3547e4753a6b417ef8edb40\"\n  },\n  {\n    \"url\": \"revival/script.js\",\n    \"revision\": \"8774971c2e05aeebf65716056d589530\"\n  },\n  {\n    \"url\": \"revival/style.css\",\n    \"revision\": \"6f740ea21893e65ac57e71556b66525a\"\n  },\n  {\n    \"url\": \"revivalcalculator.html\",\n    \"revision\": \"22dbf7c93eed372df611277c16305ca2\"\n  },\n  {\n    \"url\": \"revivalCommon.html\",\n    \"revision\": \"f99ddbc83a06aab666ac66e6b6a7c94f\"\n  },\n  {\n    \"url\": \"riders.html\",\n    \"revision\": \"f01d30a2b26f6af52899b1411fa0c5fc\"\n  },\n  {\n    \"url\": \"RIDERS/termrider714.json\",\n    \"revision\": \"64c3173844eade2e78e38554ffc4cfb5\"\n  },\n  {\n    \"url\": \"RIDERS/termrider720.json\",\n    \"revision\": \"048267f9d85ca255c5990155be854095\"\n  },\n  {\n    \"url\": \"RIDERS/termrider733.json\",\n    \"revision\": \"ff8578e13e1c537e972d850e56690de4\"\n  },\n  {\n    \"url\": \"RIDERS/termrider736.json\",\n    \"revision\": \"cbce43e992c885067cf7acaa87b0603b\"\n  },\n  {\n    \"url\": \"RIDERS/termrider745.json\",\n    \"revision\": \"bf71fcd409147305e76ca07e4b0b0f3f\"\n  },\n  {\n    \"url\": \"RIDERS/termrider748.json\",\n    \"revision\": \"f4fad609d06511aac40bd53855947d92\"\n  },\n  {\n    \"url\": \"RIDERS/termrider760.json\",\n    \"revision\": \"17101e8a24d4f076bdd2394a9047303f\"\n  },\n  {\n    \"url\": \"RIDERS/termrider771.json\",\n    \"revision\": \"d5a986fdb6953b71e9088155064fea0f\"\n  },\n  {\n    \"url\": \"riders1.html\",\n    \"revision\": \"d0f1e49e5f4579e0d9297ef63166eeb3\"\n  },\n  {\n    \"url\": \"saharaindia.html\",\n    \"revision\": \"8f31c40a13a009b67f175b13134077c3\"\n  },\n  {\n    \"url\": \"sb_process.html\",\n    \"revision\": \"27a6924c78eb30ad4383edcc4887699a\"\n  },\n  {\n    \"url\": \"SBcalculator.html\",\n    \"revision\": \"c2f4a003d714f3bdd483dd584bd0fba9\"\n  },\n  {\n    \"url\": \"sbi.html\",\n    \"revision\": \"254351d075a3f071dece04bea97154d1\"\n  },\n  {\n    \"url\": \"server.js\",\n    \"revision\": \"9c8c4d03b8a8c5a4c4569682c1337f5b\"\n  },\n  {\n    \"url\": \"server2.js\",\n    \"revision\": \"32992e8df71dc66c010439050f149533\"\n  },\n  {\n    \"url\": \"shriram.html\",\n    \"revision\": \"be141354e657a64f53050e272ee815e5\"\n  },\n  {\n    \"url\": \"signup.html\",\n    \"revision\": \"a0a68e09a50dda1db87c27ed874baf2f\"\n  },\n  {\n    \"url\": \"signup1K.html\",\n    \"revision\": \"214c9b60eacc4852b335e28dc16673c9\"\n  },\n  {\n    \"url\": \"similarPlans.html\",\n    \"revision\": \"a11708045f2d57cd093db48c6a905d17\"\n  },\n  {\n    \"url\": \"similarPlans1.html\",\n    \"revision\": \"49e6cbccbbe9ba681908c68016a9de77\"\n  },\n  {\n    \"url\": \"single.html\",\n    \"revision\": \"c9ac8515681a8b398230cec7f1a8b4ee\"\n  },\n  {\n    \"url\": \"SSV/714-f1.json\",\n    \"revision\": \"0a52ccd72b31909b340c53932dcc31bd\"\n  },\n  {\n    \"url\": \"SSV/714-f2.json\",\n    \"revision\": \"85d5f9645ddc0f5798e820ffd8c712be\"\n  },\n  {\n    \"url\": \"SSV/715-f1.json\",\n    \"revision\": \"5f8f67039a2cde0db531fac4b5a461b9\"\n  },\n  {\n    \"url\": \"SSV/715-f2.json\",\n    \"revision\": \"b819b6447088da61a979ff731f2a45ce\"\n  },\n  {\n    \"url\": \"SSV/715-f3.json\",\n    \"revision\": \"29ca65899958a45e4107cf2564b188cd\"\n  },\n  {\n    \"url\": \"SSV/717-f1.json\",\n    \"revision\": \"ba3691b9b2d03cdbc8407a9b3d4ed20a\"\n  },\n  {\n    \"url\": \"SSV/717-f2.json\",\n    \"revision\": \"0bff320d8437944e9a3c82b2e8bd4bc6\"\n  },\n  {\n    \"url\": \"SSV/720-f1.json\",\n    \"revision\": \"eb9ecd0d9c2a27acf7ac991fb5e21378\"\n  },\n  {\n    \"url\": \"SSV/720-f2.json\",\n    \"revision\": \"2113ec2f5527960a80617ee58c3210a0\"\n  },\n  {\n    \"url\": \"SSV/721-f1.json\",\n    \"revision\": \"db4b2caf29127131ea67718508b7e98d\"\n  },\n  {\n    \"url\": \"SSV/721-f2.json\",\n    \"revision\": \"a6fadb898365f5cda4040eb9a6daebdf\"\n  },\n  {\n    \"url\": \"SSV/732-f1.json\",\n    \"revision\": \"8b816572dac08f53bd78d6bc2711a85b\"\n  },\n  {\n    \"url\": \"SSV/732-f2.json\",\n    \"revision\": \"5659a634df0f5c58bbf7f51c9d0e89f4\"\n  },\n  {\n    \"url\": \"SSV/733-f1.json\",\n    \"revision\": \"6501c0d56aa6fc6cef0cd23ef37b637c\"\n  },\n  {\n    \"url\": \"SSV/733-f2.json\",\n    \"revision\": \"e45456c49fb63d8c67421306c5ae8dd7\"\n  },\n  {\n    \"url\": \"SSV/734-f1.json\",\n    \"revision\": \"7f9863146497486ae8deb920d1d295e6\"\n  },\n  {\n    \"url\": \"SSV/734-f2.json\",\n    \"revision\": \"d97343ff1da228e30d353f1d9ab1ff57\"\n  },\n  {\n    \"url\": \"SSV/736-f1.json\",\n    \"revision\": \"d1f1fee10a8dec7fc0a37fd5ba86909e\"\n  },\n  {\n    \"url\": \"SSV/736-f2.json\",\n    \"revision\": \"7c7a2406feadd5fb23a5f521b76df492\"\n  },\n  {\n    \"url\": \"SSV/745-f1-f2-f3.json\",\n    \"revision\": \"c710945b2934dc0f3ce972feee0c0553\"\n  },\n  {\n    \"url\": \"SSV/745.json\",\n    \"revision\": \"24336ef48d6c7492cd691dbf9da54971\"\n  },\n  {\n    \"url\": \"SSV/748-f1.json\",\n    \"revision\": \"83cf724fedf60b3dd2e3f46e89cf553a\"\n  },\n  {\n    \"url\": \"SSV/748-f2.json\",\n    \"revision\": \"551bf72b68edb665cf1c541cbb09a20e\"\n  },\n  {\n    \"url\": \"SSV/748-f3.json\",\n    \"revision\": \"3953c6d6d7856d8f4b5bd618421d7cde\"\n  },\n  {\n    \"url\": \"SSV/751.json\",\n    \"revision\": \"617d00cb5e5452f05d797354e9c36dee\"\n  },\n  {\n    \"url\": \"SSV/758-f1.json\",\n    \"revision\": \"91ddd489a9601aa5e555d076d0d4b321\"\n  },\n  {\n    \"url\": \"SSV/758-f2.json\",\n    \"revision\": \"41e63955bfbe5bb4667e4e914a71afbe\"\n  },\n  {\n    \"url\": \"SSV/758-f3.json\",\n    \"revision\": \"d9d1f44cb05021e376dd7cdd2076c27e\"\n  },\n  {\n    \"url\": \"SSV/760-f1.json\",\n    \"revision\": \"cf93a241ba178a28418e6fbe1d7d50de\"\n  },\n  {\n    \"url\": \"SSV/760-f2.json\",\n    \"revision\": \"6a3b3adf5adcbdbb871b2f56c2dde6eb\"\n  },\n  {\n    \"url\": \"SSV/764-f1.json\",\n    \"revision\": \"adff90ee9a35e95bfde8021eedb0dd38\"\n  },\n  {\n    \"url\": \"SSV/764-f2.json\",\n    \"revision\": \"a4737ead7aa54e407e3bd6950c13b0b8\"\n  },\n  {\n    \"url\": \"SSV/768-f1.json\",\n    \"revision\": \"cf93a241ba178a28418e6fbe1d7d50de\"\n  },\n  {\n    \"url\": \"SSV/768-f2.json\",\n    \"revision\": \"5f72e769c1bb29b075eec878f072600d\"\n  },\n  {\n    \"url\": \"SSV/771_f1-f2.json\",\n    \"revision\": \"4c3902426f6d7b3090c13788f4c1cd4c\"\n  },\n  {\n    \"url\": \"SSV/771.json\",\n    \"revision\": \"90a1ded5446055854de4a24cd6a99540\"\n  },\n  {\n    \"url\": \"SSV/774.json\",\n    \"revision\": \"c415df38ff0b794c89dabc2f49b39cfa\"\n  },\n  {\n    \"url\": \"SSV/911-f1.json\",\n    \"revision\": \"abbf1750c5f06fd08e2af083389ed783\"\n  },\n  {\n    \"url\": \"SSV/911-f2.json\",\n    \"revision\": \"f54c58b0a5f5f4df931d1134f96c2831\"\n  },\n  {\n    \"url\": \"SSV/911-f3.json\",\n    \"revision\": \"abbf1750c5f06fd08e2af083389ed783\"\n  },\n  {\n    \"url\": \"SSV/912-f1.json\",\n    \"revision\": \"28c549a9a85804d7c421fe0f22788159\"\n  },\n  {\n    \"url\": \"SSV/912-f2.json\",\n    \"revision\": \"b60d603072a37b7577df9d20c620d4b8\"\n  },\n  {\n    \"url\": \"SSV/912-f3.json\",\n    \"revision\": \"a5accfad875dec10d88ca1601fb3269d\"\n  },\n  {\n    \"url\": \"surrender_715.html\",\n    \"revision\": \"f1a7cb5ae0bf5fe7c6d73edaf8869e01\"\n  },\n  {\n    \"url\": \"surrender_717.html\",\n    \"revision\": \"104c718851fc087789e957062e7ed139\"\n  },\n  {\n    \"url\": \"surrender_720.html\",\n    \"revision\": \"173cd83ee7f1ef29d670eaa07183d12b\"\n  },\n  {\n    \"url\": \"surrender_721.html\",\n    \"revision\": \"bf47dd6933a2fdefe8f63f9df46e8e64\"\n  },\n  {\n    \"url\": \"surrender_732.html\",\n    \"revision\": \"fb1fb15c396712b2b77782db050d1568\"\n  },\n  {\n    \"url\": \"surrender_733.html\",\n    \"revision\": \"c4e19900e49db51f80ee5c0851991c30\"\n  },\n  {\n    \"url\": \"surrender_734.html\",\n    \"revision\": \"9ce883e0671974207d8cad364b80b5d0\"\n  },\n  {\n    \"url\": \"surrender_745.html\",\n    \"revision\": \"25194451970cb85222735002659fd57d\"\n  },\n  {\n    \"url\": \"surrender_748.html\",\n    \"revision\": \"73c8ad1470e2bbaf383c2a3592251a84\"\n  },\n  {\n    \"url\": \"surrender_7481K.html\",\n    \"revision\": \"52119f94f5681f1de1d09414d2d9ae50\"\n  },\n  {\n    \"url\": \"surrender_751.html\",\n    \"revision\": \"3d08c8e0185aa53b54ccff4225838a6f\"\n  },\n  {\n    \"url\": \"surrender_760.html\",\n    \"revision\": \"ea1dc8b7ed2f578a5d7acc60889d6dc8\"\n  },\n  {\n    \"url\": \"surrender_764.html\",\n    \"revision\": \"c9723ed389ae868e4786ddc70154a593\"\n  },\n  {\n    \"url\": \"surrender_768.html\",\n    \"revision\": \"8740dde9d41bdc4cf12adeeff93e5c3c\"\n  },\n  {\n    \"url\": \"surrender_771.html\",\n    \"revision\": \"330e9083b0c119e91dcca707c52643a7\"\n  },\n  {\n    \"url\": \"surrender_774.html\",\n    \"revision\": \"6deb5512d60ec5e6f3603913cb9a0b61\"\n  },\n  {\n    \"url\": \"surrender_process.html\",\n    \"revision\": \"92b5cb638b740aaa2f9bacfcd09e4883\"\n  },\n  {\n    \"url\": \"surrender-736.html\",\n    \"revision\": \"b13ef9fbcdad5fcf0c1969c74cae668d\"\n  },\n  {\n    \"url\": \"surrender.html\",\n    \"revision\": \"77980ceaf82eca1e9990c7fd133ad6c7\"\n  },\n  {\n    \"url\": \"surrender/plan_features2K.html\",\n    \"revision\": \"aa81ecbd8e8b400020680bc68ef82de3\"\n  },\n  {\n    \"url\": \"surrender/surrender_715.html\",\n    \"revision\": \"f1a7cb5ae0bf5fe7c6d73edaf8869e01\"\n  },\n  {\n    \"url\": \"surrender/surrender_717.html\",\n    \"revision\": \"104c718851fc087789e957062e7ed139\"\n  },\n  {\n    \"url\": \"surrender/surrender_720.html\",\n    \"revision\": \"173cd83ee7f1ef29d670eaa07183d12b\"\n  },\n  {\n    \"url\": \"surrender/surrender_721.html\",\n    \"revision\": \"bf47dd6933a2fdefe8f63f9df46e8e64\"\n  },\n  {\n    \"url\": \"surrender/surrender_732.html\",\n    \"revision\": \"fb1fb15c396712b2b77782db050d1568\"\n  },\n  {\n    \"url\": \"surrender/surrender_733.html\",\n    \"revision\": \"c4e19900e49db51f80ee5c0851991c30\"\n  },\n  {\n    \"url\": \"surrender/surrender_734.html\",\n    \"revision\": \"9ce883e0671974207d8cad364b80b5d0\"\n  },\n  {\n    \"url\": \"surrender/surrender_745.html\",\n    \"revision\": \"25194451970cb85222735002659fd57d\"\n  },\n  {\n    \"url\": \"surrender/surrender_748.html\",\n    \"revision\": \"73c8ad1470e2bbaf383c2a3592251a84\"\n  },\n  {\n    \"url\": \"surrender/surrender_7481K.html\",\n    \"revision\": \"52119f94f5681f1de1d09414d2d9ae50\"\n  },\n  {\n    \"url\": \"surrender/surrender_751.html\",\n    \"revision\": \"3d08c8e0185aa53b54ccff4225838a6f\"\n  },\n  {\n    \"url\": \"surrender/surrender_760.html\",\n    \"revision\": \"ea1dc8b7ed2f578a5d7acc60889d6dc8\"\n  },\n  {\n    \"url\": \"surrender/surrender_764.html\",\n    \"revision\": \"c9723ed389ae868e4786ddc70154a593\"\n  },\n  {\n    \"url\": \"surrender/surrender_768.html\",\n    \"revision\": \"8740dde9d41bdc4cf12adeeff93e5c3c\"\n  },\n  {\n    \"url\": \"surrender/surrender_771.html\",\n    \"revision\": \"330e9083b0c119e91dcca707c52643a7\"\n  },\n  {\n    \"url\": \"surrender/surrender_774.html\",\n    \"revision\": \"6deb5512d60ec5e6f3603913cb9a0b61\"\n  },\n  {\n    \"url\": \"surrender/surrender-736.html\",\n    \"revision\": \"b13ef9fbcdad5fcf0c1969c74cae668d\"\n  },\n  {\n    \"url\": \"surrender/surrender.html\",\n    \"revision\": \"1d43f4ee68e888aa044c757b2a06b19f\"\n  },\n  {\n    \"url\": \"surrendercalculator.html\",\n    \"revision\": \"809be3a2c129c208f6c563a621fe2996\"\n  },\n  {\n    \"url\": \"sw.js\",\n    \"revision\": \"92e0621837934bae0be87669a5500423\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp714.json\",\n    \"revision\": \"b32095dae50efa6334e5aa3901af95fd\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp715.json\",\n    \"revision\": \"db8c3d9df842d480d4627b705f765da1\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp717.json\",\n    \"revision\": \"ab701397664be68b92ddf6b1fb390525\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp720.json\",\n    \"revision\": \"b267b98b9f82ba7d27c4e2acdaa6c85f\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp721.json\",\n    \"revision\": \"505efc6dbfeab25a622341a7a8012ffc\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp732.json\",\n    \"revision\": \"c4337ebf557514aaa2942fb7122babd8\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp733.json\",\n    \"revision\": \"675f69cbf3d8c8628028db0c2e8398e1\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp734.json\",\n    \"revision\": \"cc700b2fd712fbf563009298aebbb3fb\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp736.json\",\n    \"revision\": \"8a994966b42d0f337c0f2a333cf3a5e3\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp745.json\",\n    \"revision\": \"4d55011a7cc32efd13e599e93f733297\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp748.json\",\n    \"revision\": \"6443ba3ebb75a84302cef6d0810c95cf\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp751.json\",\n    \"revision\": \"f4769451035157daa3d9e56e96b7c2c3\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp760.json\",\n    \"revision\": \"b4ac8fcfdc80752b3d60b3801bda278a\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp764.json\",\n    \"revision\": \"d11754e0ff9a6cebf77153a4752c38da\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp768.json\",\n    \"revision\": \"e4c1353cdfa1de92db11be8265486b0a\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp771.json\",\n    \"revision\": \"77913749cf5d41794664a3580824b4de\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp774.json\",\n    \"revision\": \"7409181a0cd8fbe02117fdbdb44f05ca\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp862-hly.json\",\n    \"revision\": \"0df449aa5fab2b2b381b79b2209f8587\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp862-mly.json\",\n    \"revision\": \"0a6cadc911f55ea97c723c4f4428d187\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp862-qly.json\",\n    \"revision\": \"93cc7be9a0dc8640d35cf6468736d753\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp862-SP.json\",\n    \"revision\": \"340d45b662e5f91b1d9e3081db9a2704\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp862-Yly.json\",\n    \"revision\": \"e0237db0a9a1f42e0908c743e981d510\"\n  },\n  {\n    \"url\": \"TABULAR PREMIUM/tp872.json\",\n    \"revision\": \"d68475e3ef182b215eed569b940652be\"\n  },\n  {\n    \"url\": \"tap.png\",\n    \"revision\": \"a851a1e324b871a10f03f4af29bfc979\"\n  },\n  {\n    \"url\": \"targetcommission.html\",\n    \"revision\": \"ffe1563ad6bcb5b504666461210d26cb\"\n  },\n  {\n    \"url\": \"targetcommission1.html\",\n    \"revision\": \"a2b3a3d7021ba42a55a7eb8a26ebac39\"\n  },\n  {\n    \"url\": \"tataaia.html\",\n    \"revision\": \"d64d8da340d01303152f8bb6c212e68e\"\n  },\n  {\n    \"url\": \"TERM RIDERS/714.json\",\n    \"revision\": \"64c3173844eade2e78e38554ffc4cfb5\"\n  },\n  {\n    \"url\": \"TERM RIDERS/715.json\",\n    \"revision\": \"ae1025bd065e1bc0577b7595ef92a67b\"\n  },\n  {\n    \"url\": \"TERM RIDERS/720.json\",\n    \"revision\": \"048267f9d85ca255c5990155be854095\"\n  },\n  {\n    \"url\": \"TERM RIDERS/721.json\",\n    \"revision\": \"6fff1471357ec8e97752b9861210f384\"\n  },\n  {\n    \"url\": \"TERM RIDERS/733.json\",\n    \"revision\": \"fef954b06bcc1f1f6c533c213435dfd1\"\n  },\n  {\n    \"url\": \"TERM RIDERS/736.json\",\n    \"revision\": \"cbce43e992c885067cf7acaa87b0603b\"\n  },\n  {\n    \"url\": \"TERM RIDERS/745.json\",\n    \"revision\": \"bfb75148d4cf52509976f90ed6162085\"\n  },\n  {\n    \"url\": \"TERM RIDERS/748.json\",\n    \"revision\": \"f4fad609d06511aac40bd53855947d92\"\n  },\n  {\n    \"url\": \"TERM RIDERS/760.json\",\n    \"revision\": \"17101e8a24d4f076bdd2394a9047303f\"\n  },\n  {\n    \"url\": \"TERM RIDERS/764termrider.json\",\n    \"revision\": \"118c6c3d6a0bd6f67be670c7919019a3\"\n  },\n  {\n    \"url\": \"TERM RIDERS/771.json\",\n    \"revision\": \"78c3b2ee0dbe03f6db0845de031c339f\"\n  },\n  {\n    \"url\": \"terminologies.html\",\n    \"revision\": \"fe3c755bd2fae913fcba0d5d3f0cca75\"\n  },\n  {\n    \"url\": \"terminologies1.html\",\n    \"revision\": \"795df9a09a1bfbc4d0c137aca57062e0\"\n  },\n  {\n    \"url\": \"terminologies1K.html\",\n    \"revision\": \"04f286f89b464c04ad39da212435462a\"\n  },\n  {\n    \"url\": \"types_of_forms.html\",\n    \"revision\": \"cc8eadfe30f73612a768a891b6e5be65\"\n  },\n  {\n    \"url\": \"types_of_forms2K.html\",\n    \"revision\": \"91c1334c6312bd84bf71f104ad334e3a\"\n  },\n  {\n    \"url\": \"video_714.html\",\n    \"revision\": \"3cd766e6bf8b970d8cb9265307d3c9bb\"\n  },\n  {\n    \"url\": \"voice.html\",\n    \"revision\": \"1649ba7692c72559e440088afa217e2c\"\n  },\n  {\n    \"url\": \"voice.png\",\n    \"revision\": \"9d1b4d16b3600461b9c74863db625384\"\n  }\n], {});\n\n\n\n\n\n\n\n\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n"],"names":["self","_","e","messageGenerator","fallback","code","args","msg","length","JSON","stringify","WorkboxError","Error","constructor","errorCode","details","super","this","name","normalizeHandler","handler","handle","Route","match","method","setCatchHandler","catchHandler","RegExpRoute","regExp","url","result","exec","href","origin","location","index","slice","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","type","payload","requestPromises","Promise","all","urlsToCache","map","entry","Request","waitUntil","ports","then","postMessage","URL","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","has","get","err","reject","_catchHandler","catch","async","catchErr","matchResult","Array","isArray","Object","keys","undefined","setDefaultHandler","set","registerRoute","push","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","value","join","cacheNames","userCacheName","asyncFn","returnPromise","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","state","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","headers","supportStatus","copyResponse","response","modifier","clonedResponse","clone","responseInit","Headers","status","statusText","modifiedResponseInit","body","testResponse","Response","error","canConstructResponseFromBodyStream","blob","stripParams","fullURL","ignoreParams","strippedURL","param","delete","Deferred","promise","resolve","quotaErrorCallbacks","Set","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","cb","iterateCallbacks","thrownErrorMessage","message","pluginFilteredRequest","fetchResponse","fetchOptions","callback","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","key","matchOptions","effectiveRequest","getCacheKey","multiMatchOptions","caches","ms","setTimeout","String","replace","RegExp","responseToCache","_ensureResponseSafeToCache","cache","open","hasCacheUpdateCallback","oldResponse","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheMatchIgnoreParams","put","executeQuotaErrorCallbacks","newResponse","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","_awaitComplete","_handle","waitUntilError","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","defaultPluginIndex","cacheWillUpdatePluginCount","entries","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","bind","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","firstEntry","secondEntry","warningMessage","console","warn","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","deletedURLs","getURLsToCacheKeys","getCachedURLs","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","PrecacheRoute","urlsToCacheKeys","possibleURL","ignoreURLParametersMatching","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","paramName","some","test","removeIgnoredSearchParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","generateURLVariations","addRoute","capture","captureUrl","matchCallback","moduleName","funcName","skipWaiting"],"mappings":"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Ed,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,WACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,8BACPqF,SAAY,oCAEd,CACErF,IAAO,8BACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,4CACPqF,SAAY,oCAEd,CACErF,IAAO,4CACPqF,SAAY,oCAEd,CACErF,IAAO,4CACPqF,SAAY,oCAEd,CACErF,IAAO,4CACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,8BACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,WACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,UACPqF,SAAY,oCAEd,CACErF,IAAO,WACPqF,SAAY,oCAEd,CACErF,IAAO,WACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,8BACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,0BACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,4BACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,mBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,WACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,gBACPqF,SAAY,oCAEd,CACErF,IAAO,oBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,cACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,kBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,+BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,2BACPqF,SAAY,oCAEd,CACErF,IAAO,QACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,gCACPqF,SAAY,oCAEd,CACErF,IAAO,iCACPqF,SAAY,oCAEd,CACErF,IAAO,6BACPqF,SAAY,oCAEd,CACErF,IAAO,UACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,yBACPqF,SAAY,oCAEd,CACErF,IAAO,eACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,gCACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,qBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,uBACPqF,SAAY,oCAEd,CACErF,IAAO,sBACPqF,SAAY,oCAEd,CACErF,IAAO,wBACPqF,SAAY,oCAEd,CACErF,IAAO,iBACPqF,SAAY,oCAEd,CACErF,IAAO,aACPqF,SAAY,oCAEd,CACErF,IAAO,YACPqF,SAAY,sCDltEZsL,EAASpI"}